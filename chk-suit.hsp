/*=============================
 * HSP麻雀クライアントMiHaJong
 *    [一色手判定ルーチン]
 *=============================
 */
/* 一色系などの役 */
#module
#include "const.as"
#deffunc suityaku var GameStat, var tmpYakuInfo, array MianziDat, int targetPlayer, int FuritenFlag, int MachiType
	trace "一色系の処理に入ります。"
	WanzMian = 0: PinzMian = 0: SouzMian = 0: ZiMian = 0
	WindMian = 0: DragonMian = 0
	Cifr = countMentzNumerals(MianziDat)
	repeat SIZE_OF_MELD_BUFFER
		switch (MianziDat(cnt) \ TILE_CODE_MAXIMUM / TILE_SUIT_STEP) * TILE_SUIT_STEP
			case TILE_SUIT_CHARACTERS: WanzMian++: swbreak
			case TILE_SUIT_CIRCLES: PinzMian++: swbreak
			case TILE_SUIT_BAMBOOS: SouzMian++: swbreak
#ifndef SANMAS
			case TILE_SUIT_HONORS: ZiMian++: swbreak
#endif
		swend
		if (((MianziDat(cnt) \ TILE_CODE_MAXIMUM) >= TILE_WIND_MIN)&&((MianziDat(cnt) \ TILE_CODE_MAXIMUM) <= TILE_WIND_MAX)) {
			WindMian++
		}
		if (((MianziDat(cnt) \ TILE_CODE_MAXIMUM) >= TILE_DRAGON_MIN)&&((MianziDat(cnt) \ TILE_CODE_MAXIMUM) <= TILE_DRAGON_MAX)) {
			DragonMian++
		}
	loop
	if (((WanzMian+Zimian) == SIZE_OF_MELD_BUFFER)||((PinzMian+Zimian) == SIZE_OF_MELD_BUFFER)||((SouzMian+Zimian) == SIZE_OF_MELD_BUFFER)) {
#ifndef SANMAS
		if (Zimian == 0) {
#endif
			if (getRule(RULE_CHINIISOH) != 0) {
				addyaku tmpYakuInfo, "清一色", 3+getMenzen(GameStat, targetPlayer)
			} else {
				addyaku tmpYakuInfo, "清一色", 5+getMenzen(GameStat, targetPlayer)
			}
			if (getMenzen(GameStat, targetPlayer) == 1) {
				/* 門清前提の役を判定する */
				/* 成立条件が牌式で表記できるもの */
				tmpRuleCodeList = -1, RULE_DAISHARIN, RULE_DAICHIKURIN, RULE_DAISUURIN, RULE_SHOSHARIN, RULE_SHOCHIKURIN, RULE_SHOSUURIN, RULE_SHOSHARIN, RULE_SHOCHIKURIN, RULE_SHOSUURIN, RULE_PI, RULE_SQUARE_ROOT_TWO, RULE_NATURAL_LOGARITHM, RULE_IMAGINARY_NUMBER, RULE_SQUARE_ROOT_TEN, RULE_QINGHAIHU, RULE_QINGHAIHU
				tmpHaishikiList = "311111113", "022222220", "022222220", "022222220", "222222200", "222222200", "222222200", "002222222", "002222222", "002222222", "211131113", "323211100", "130110141", "111022411", "222004310", "422000222", "222000224"
				sdim tmpYakuNameList, 16, length(tmpRuleCodeList)
				tmpYakuNameList = "九蓮宝燈", "大車輪", "大竹林", "大数隣", "小車輪", "小竹林", "小数隣", "小車輪", "小竹林", "小数隣", "円周率和", "√２和", "自然対数の底", "虚数和", "√１０和", "清海湖", "清海湖"
				
				repeat length(tmpRuleCodeList)
					ruleEnabled = 0
					if (tmpRuleCodeList(cnt) == -1) {ruleEnabled = 1}
					else: if (tmpRuleCodeList(cnt) != "0") {ruleEnabled = 1}
					if (ruleEnabled != "0") {
						countTilesInHand TileCount, GameStat, targetPlayer
						yakuFlag = 0
						repeat 3
							if ((tmpYakuNameList == "大車輪")&&(cnt != TILE_SUIT_CIRCLES/TILE_SUIT_STEP)) {continue}
							if ((tmpYakuNameList == "大竹林")&&(cnt != TILE_SUIT_BAMBOOS/TILE_SUIT_STEP)) {continue}
							if ((tmpYakuNameList == "大数隣")&&(cnt != TILE_SUIT_CHARACTERS/TILE_SUIT_STEP)) {continue}
							if ((tmpYakuNameList == "小車輪")&&(cnt != TILE_SUIT_CIRCLES/TILE_SUIT_STEP)) {continue}
							if ((tmpYakuNameList == "小竹林")&&(cnt != TILE_SUIT_BAMBOOS/TILE_SUIT_STEP)) {continue}
							if ((tmpYakuNameList == "小数隣")&&(cnt != TILE_SUIT_CHARACTERS/TILE_SUIT_STEP)) {continue}
							tmpcnt = cnt
							subFlag = 0
							repeat 9, 1
								if (TileCount(tmpcnt*TILE_SUIT_STEP+cnt) >= (int(strmid(tmpHaishikiList(tmpcnt), cnt-1, 1)))) {subFlag++}
							loop
							if (subFlag = 9) {yakuFlag = 1}
						loop
						if (yakuFlag) {
							tmpyakumanRate = 1
							if (tmpYakuNameList(cnt) == "九蓮宝燈") {
								countTilesInHand TileCount2, GameStat, targetPlayer
								TileCount2(getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer))--
								yakuFlag2 = 0
								repeat 3
									if ((TileCount(cnt*TILE_SUIT_STEP+1) >= 3)&&(TileCount(cnt*TILE_SUIT_STEP+2) >= 1)&&(TileCount(cnt*TILE_SUIT_STEP+3) >= 1)&&(TileCount(cnt*TILE_SUIT_STEP+4) >= 1)&&(TileCount(cnt*TILE_SUIT_STEP+5) >= 1)&&(TileCount(cnt*TILE_SUIT_STEP+6) >= 1)&&(TileCount(cnt*TILE_SUIT_STEP+7) >= 1)&&(TileCount(cnt*TILE_SUIT_STEP+8) >= 1)&&(TileCount(cnt*TILE_SUIT_STEP+9) >= 3)) {yakuFlag2 = 1}
								loop
								if ((getHeavenHandFlag(GameStat) == 1)&&(getRule(RULE_DOUBLE_YAKUMAN) == 0)) {
									tmpActualYakuName = "純正九蓮宝燈": tmpyakumanRate = 2
								} else {
									// 振聴の時は純正扱いとしないように変更
									if ((yakuFlag2)&&(FuritenFlag == 0)&&(getRule(RULE_DOUBLE_YAKUMAN) == 0)) {
										tmpActualYakuName = "純正九蓮宝燈": tmpyakumanRate = 2
									} else {
										tmpActualYakuName = "九蓮宝燈": tmpyakumanRate = 1
									}
								} 
							}
							else: if (tmpYakuNameList(cnt) == "大車輪") {
								if (getRule(RULE_DAISHARIN) == 2) {
									tmpActualYakuName = "大車輪": tmpyakumanRate = 2
								} else {
									tmpActualYakuName = "大車輪": tmpyakumanRate = 1
								}
								delyaku tmpYakuInfo, "平和"
							}
							else {tmpActualYakuName = tmpYakuNameList(cnt)}
							addyakuman tmpYakuInfo, tmpActualYakuName, tmpyakumanRate
							// 成立したら清一色の成立を解除する(青天井ルール用)
							delyaku tmpYakuInfo, "清一色"
						}
					}
				loop
			}
#ifndef SANMAX
			/* 百万石 */
			if (getRule(RULE_KAGA_MILLION) != 0) {
				if (WanzMian == SIZE_OF_MELD_BUFFER) {
					if (Cifr == 100) {
						if (getRule(RULE_KAGA_MILLION) == 2) {
							addyakuman tmpYakuInfo, "加賀百万石", 2
						} else {
							addyakuman tmpYakuInfo, "加賀百万石", 1
						}
						// 成立したら清一色と平和の成立を解除する(青天井ルール用)
						delyaku tmpYakuInfo, "清一色"
					}
					if (Cifr > 100) {
						addyakuman tmpYakuInfo, "百万石", 1
						// 成立したら清一色の成立を解除する(青天井ルール用)
						delyaku tmpYakuInfo, "清一色"
					}
				}
			}
#endif
			if (getRule(RULE_PINZU_MILLION) != 0) {
				if (PinzMian == SIZE_OF_MELD_BUFFER) {
					if (Cifr >= 100) {
						addyakuman tmpYakuInfo, "筒子百万石", 1
						// 成立したら清一色の成立を解除する(青天井ルール用)
						delyaku tmpYakuInfo, "清一色"
					}
				}
			}
#ifndef SANMAX
			/* 紀州五十五万石 */
			if (getRule(RULE_KISHU550K) != 0) {
				if (WanzMian == SIZE_OF_MELD_BUFFER) {
					if (Cifr == 55) {
						addyakuman tmpYakuInfo, "紀州五十五万石", 1
						// 成立したら清一色の成立を解除する(青天井ルール用)
						delyaku tmpYakuInfo, "清一色"
					}
				}
			}
			/* 水戸三十五万石 */
			if (getRule(RULE_MITO350K) != 0) {
				if (WanzMian == SIZE_OF_MELD_BUFFER) {
					if (Cifr <= 35) {
						addyakuman tmpYakuInfo, "水戸三十五万石", 1
						// 成立したら清一色の成立を解除する(青天井ルール用)
						delyaku tmpYakuInfo, "清一色"
					}
				}
			}
#endif
			/* フルムーン */
			if (getRule(RULE_FULLMOON) != 0) {
				if (Cifr == 88) {
					addyakuman tmpYakuInfo, "フルムーン", 1
					// 成立したら清一色の成立を解除する(青天井ルール用)
					delyaku tmpYakuInfo, "清一色"
				}
			}
			/* 星光燦爛 */
			if (getRule(RULE_STARLIGHT) != 0) {
				if (PinzMian == SIZE_OF_MELD_BUFFER) {
					yakuFlag = 0
					countKez KezCount, MianziDat
					if (KezCount(TILE_SUIT_CIRCLES+7) >= 1) {yakuFlag = 1}
					if (yakuFlag) {
						addyaku tmpYakuInfo, "星光燦爛", 1
					}
				}
			}
#ifndef SANMAS
		} else {
			addyaku tmpYakuInfo, "混一色", 2+getMenzen(GameStat, targetPlayer)
#ifdef SANMAX
			/* 萬和 */
			if (getRule(RULE_CHARACTERS_MAHJONG) != 0) {
				if (((WanzMian+Zimian) == SIZE_OF_MELD_BUFFER)&&(WanzMian > 0)) {
					if ((DragonMian == 0)||(getRule(RULE_CHARACTERS_MAHJONG) == 2)) {
						addyakuman tmpYakuInfo, "萬和", 1
					}
				}
			}
#endif
#ifndef SANMAS
			/* 東京オリンピック */
			if (getRule(RULE_TOKYO_OLYMPIC_MONOCHROME) != 0) {
				yakuFlag = 0
				dim targetKez,1: targetKez=TILE_SUIT_CIRCLES+5
				dim targetShunz,1: targetShunz=TILE_SUIT_CIRCLES+3, TILE_SUIT_CIRCLES+4, TILE_SUIT_CIRCLES+5
				yakuFlag = countSpecMentz(MianziDat, targetKez, targetShunz, 0)
				dim targetKez,1: targetKez=TILE_EAST_WIND
				dim targetShunz,1: targetShunz=0
				yakuFlag2 = countSpecMentz(MianziDat, targetKez, targetShunz, 0)
				if (yakuFlag*yakuFlag2) {
					addyakuman tmpYakuInfo, "東京オリンピック", 1
					delyaku tmpYakuInfo, "混一色"
				}
			}
			/* 鏡音リンレン */
			if (getRule(RULE_KAGAMINE_RINLEN) != 0) {
				countKez KezCount, MianziDat: NumOfKez = stat
				yakuFlag = 0
				repeat TILE_NUMERAL_MAX
					if ((KezCount(cnt) >= 1)&&(KezCount(cnt+1) >= 1)&&(KezCount(cnt+2) >= 1)) {yakuFlag = 1}
				loop
				if ((KezCount(TILE_WHITE_DRAGON) >= 1)&&(yakuFlag == 1)&&(PinzMian == (SIZE_OF_MELD_BUFFER - 1))) {
					addyakuman tmpYakuInfo, "鏡音リンレン", 1
					delyaku tmpYakuInfo, "混一色"
				}
			}
			/* 鏡音リン */
			if (getRule(RULE_KAGAMINE_RIN) != 0) {
				if (searchyaku(tmpYakuInfo, "鏡音リンレン") == 0) {
					countKez KezCount, MianziDat: NumOfKez = stat
					countDuiz DuiCount, MianziDat
					if ((DuiCount(TILE_WHITE_DRAGON) >= 1)&&(PinzMian == (SIZE_OF_MELD_BUFFER - 1))) {
						addyaku tmpYakuInfo, "鏡音リン", 2
					}
				}
			}
#endif
		}
#endif
	} else {
		/* 絶一門 */
		if (getRule(RULE_CHUEIIMEN) != 0) {
			if ((WanzMian == 0)||(PinzMian == 0)||(SouzMian == 0)) {
#ifndef SANMAS
				if ((Zimian == 0)||(getRule(RULE_CHUEIIMEN) != 2)) {
#endif
					if (getMenzen(GameStat, targetPlayer) == 1) {
						addyaku tmpYakuInfo, "絶一門", 1
					}
#ifndef SANMAS
				}
#endif
			}
		}
		/* 四面楚歌 */
		if (getRule(RULE_SIMIAN_CHUGE) != 0) {
			if (((WanzMian+1) == SIZE_OF_MELD_BUFFER)&&((MianziDat(0)/TILE_SUIT_STEP) != (TILE_SUIT_CHARACTERS/TILE_SUIT_STEP))||((PinzMian+1) == SIZE_OF_MELD_BUFFER)&&((MianziDat(0)/TILE_SUIT_STEP) != (TILE_SUIT_CIRCLES/TILE_SUIT_STEP))||((SouzMian+1) == SIZE_OF_MELD_BUFFER)&&((MianziDat(0)/TILE_SUIT_STEP) != (TILE_SUIT_BAMBOOS/TILE_SUIT_STEP))) {
				if (ZiMian == 0) {
					if (MachiType == MACHI_TANKI) {
						addyaku tmpYakuInfo, "四面楚歌", 4
					}
				}
			}
		}
	}
#ifndef SANMAS
	/* 五門斎 */
	if (getRule(RULE_UUMENCHII) != 0) {
		if ((WanzMian == 1)&&(PinzMian == 1)&&(SouzMian == 1)&&(WindMian == 1)&&(DragonMian == 1)) {
			addyaku tmpYakuInfo, "五門斎", 2
		}
	}
	/* 東京オリンピック */
	if (getRule(RULE_TOKYO_OLYMPIC_POLYCHROME) != 0) {
		if ((WanzMian == 1)&&(PinzMian == 1)&&(SouzMian == 1)&&(WindMian == 1)&&(DragonMian == 1)) {
			yakuFlag = 0
			countKez KezCount, MianziDat
			if (KezCount(TILE_EAST_WIND) >= 1) {
				if (((getRound(GameStat)/4) == PLAYER_EAST)&&(playerWind(targetPlayer, getRound(GameStat)) == PLAYER_EAST)) {
					yakuFlag = 1
				}
			}
			if (yakuFlag) {
				addyakuman tmpYakuInfo, "東京オリンピック ", 1
				delyaku tmpYakuInfo, "五門斎"
			}
		}
	}
#endif
return
#global
