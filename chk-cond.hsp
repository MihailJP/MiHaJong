/*=============================
 * HSP麻雀クライアントMiHaJong
 *    [状況役判定ルーチン]
 *=============================
 */
/* 状況役 */
#module
#include "const.as"
#deffunc contextualyaku var GameStat, var tmpYakuInfo, array MianziDat, int targetPlayer, int MachiType
	trace "状況役の処理に入ります。"
	/* 立直系 */
	if (getRichiFlag(GameStat, RICHI_OPENFLAG, targetPlayer) == 1) {
		if (getMenzen(GameStat, targetPlayer) == 1) {
			// ０…ダマ聴 １…リーチ ２…リー即
			// ３…ダブリー ４…ダブリー即
			if ((getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_YES)||(getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_IPPATSU)) {
				addyaku tmpYakuInfo, "オープン立直", 2
			}
			if ((getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_DOUBLE)||(getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_DOUBLE_IPPATSU)) {
				addyaku tmpYakuInfo, "ダブル開立直", 3
			}
			if (getTsumoAgariFlag(GameStat) == 0) {
				if (getRichiFlag(GameStat, RICHI_FLAG, getCurrentPlayer(GameStat, CURRENTPLAYER_FURIKOMI)) == RIICHI_NO) {
					addyaku tmpYakuInfo, "開立直栄和", 11
				}
			}
		}
	} else {
		if (getMenzen(GameStat, targetPlayer) == 1) {
			// ０…ダマ聴 １…リーチ ２…リー即
			// ３…ダブリー ４…ダブリー即
			if ((getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_YES)||(getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_IPPATSU)) {
				addyaku tmpYakuInfo, "立直", 1
			}
			if ((getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_DOUBLE)||(getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_DOUBLE_IPPATSU)) {
				addyaku tmpYakuInfo, "ダブル立直", 2
			}
		}
	}
	/* 一発 */
	if ((getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_IPPATSU)||(getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_DOUBLE_IPPATSU)) {
		if ((getRule(RULE_RIICHI_IPPATSU) != 1)&&(getRule(RULE_RIICHI_IPPATSU) != 3)) {
			yakuFlag = 0
			if (getRule(RULE_CHOUIPPATSU) != 0){
				if (getTsumoAgariFlag(GameStat) == 0) {
					if (getCurrentPlayer(GameStat, CURRENTPLAYER_FURIKOMI) == shimochaOf(targetPlayer)) {
						yakuFlag = 1
					}
#ifdef SANMAT
					if ((getCurrentPlayer(GameStat, CURRENTPLAYER_FURIKOMI) == 0)&&(targetPlayer == 2)) {
						yakuFlag = 1
					}
#endif
#ifdef SANMA4
					if ((getCurrentPlayer(GameStat, CURRENTPLAYER_FURIKOMI) == toimenOf(targetPlayer))&&(playerWind(targetPlayer, getRound(GameStat)) == PLAYER_WEST)) {
						yakuFlag = 1
					}
#endif
				}
			}
			if (yakuFlag) {
				addyaku tmpYakuInfo, "超一発", 2
				if (getRule(RULE_RIICHI_IPPATSU) == 2) {addYakuInfo tmpYakuInfo, YAKUINF_HAN_BASE, -2: addYakuInfo tmpYakuInfo, YAKUINF_HAN_BONUS, 2}
			} else {
				addyaku tmpYakuInfo, "一発", 1
				if (getRule(RULE_RIICHI_IPPATSU) == 2) {addYakuInfo tmpYakuInfo, YAKUINF_HAN_BASE, -1: addYakuInfo tmpYakuInfo, YAKUINF_HAN_BONUS, 1}
			}
		}
	}
	/* 鳥リーチ */
	if (getRule(RULE_BIRD_RIICHI) != 0) {
		if (getMenzen(GameStat, targetPlayer) == 1) {
			if (getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) != RIICHI_NO) {
				yakuFlag = 0
				repeat DiscardPointer(GameStat, targetPlayer), 1
					if (getDiscard(GameStat, DISCARD_TILECODE, cnt, targetPlayer) == SUTEHAI_RIICHI+TILE_SUIT_BAMBOOS+1) {yakuFlag = 1}
					if (getDiscard(GameStat, DISCARD_TILECODE, cnt, targetPlayer) == SUTEHAI_RIICHI_TAKEN+TILE_SUIT_BAMBOOS+1) {yakuFlag = 1}
				loop
				if (yakuFlag) {addyaku tmpYakuInfo, "鳥立直", 1}
			}
		}
	}
	/* 天和系 */
	tmpRenHuFlag = 0 // 人和を役満以外に設定していたとき用
	if (getMenzen(GameStat, targetPlayer) == 1) {
		if (getFirstDrawFlag(GameStat, targetPlayer) == 1) {
			if ((targetPlayer) == (getRound(GameStat)\4)) {
				if (getRule(RULE_TENHOH) != 0) {
					addyakuman tmpYakuInfo, "天和", 2
				} else {
					addyakuman tmpYakuInfo, "天和", 1
				}
			} else {
				if (getTsumoAgariFlag(GameStat) == 1) {
					addyakuman tmpYakuInfo, "地和", 1
				} else {
					if (getRule(RULE_RENHOH) != 0) {
						switch getRule(RULE_RENHOH)
							case 1: addyakuman tmpYakuInfo, "人和", 1: swbreak
							case 2: addmangan tmpYakuInfo, "人和", 4: swbreak
							case 3: addmangan tmpYakuInfo, "人和", 2: swbreak
						swend
					}
				}
			}
		}
	}
	/* ツモ */
	if ((getMenzen(GameStat, targetPlayer) == 1)&&(getTsumoAgariFlag(GameStat) == 1)&&(getFirstDrawFlag(GameStat, targetPlayer) == 0)) {
		// 天和や地和とは複合しないようにしてある
		addyaku tmpYakuInfo, "門前清自摸和", 1
	}
#ifndef ALLSANMA
	/* 三隻転覆 */
	if (getRule(RULE_SANSEKI_TEMPUKU) != 0) {
		if (getTsumoAgariFlag(GameStat) == 1) {
			if ((getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_NO)&&(getRichiFlag(GameStat, RICHI_FLAG, ShimochaOf(targetPlayer)) != RIICHI_NO)&&(getRichiFlag(GameStat, RICHI_FLAG, ToimenOf(targetPlayer)) != RIICHI_NO)&&(getRichiFlag(GameStat, RICHI_FLAG, KamichaOf(targetPlayer)) != RIICHI_NO)) {
				addyaku tmpYakuInfo, "三隻転覆", 3
			}
		}
	}
	/* 起死回生 */
	if (getRule(RULE_KISHI_KAISEI) != 0) {
		if ((getMenzen(GameStat, targetPlayer) == 1)&&(getTsumoAgariFlag(GameStat) == 1)) {
			if ((getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_NO)&&(getRichiFlag(GameStat, RICHI_FLAG, ShimochaOf(targetPlayer)) >= RIICHI_DOUBLE)&&(getRichiFlag(GameStat, RICHI_FLAG, ToimenOf(targetPlayer)) >= RIICHI_DOUBLE)&&(getRichiFlag(GameStat, RICHI_FLAG, KamichaOf(targetPlayer)) >= RIICHI_DOUBLE)) {
				addyakuman tmpYakuInfo, "起死回生", 1
			}
		}
	}
#endif
	/* 嶺上ツモ */
	if ((getKangFlag(GameStat, KANG_FLAG) == 1)&&(getTsumoAgariFlag(GameStat) == 1)) {
		if ((getKangFlag(GameStat, KANG_CHAINFLAG) >= 2)&&(getRule(RULE_RENKAN_KAIHOH) != 0)) {
			addyaku tmpYakuInfo, "連槓開花", 2
		} else:if ((getPao(GameStat, PAO_PLAYER_PAO, PAO_YAKU_MINKAN) >= 0)&&(getRule(RULE_MINKAN_PAO) >= 3)&&(getRule(RULE_MINKAN_PAO) <= 5)) {
			addyaku tmpYakuInfo, "明槓開花", 2
		} else {
			addyaku tmpYakuInfo, "嶺上開花", 1
		}
		/* 五筒開花 */
		if (getRule(RULE_UUPIN_KAIHOH) != 0) {
			if (getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) == TILE_SUIT_CIRCLES+5) {
				if (getRule(RULE_UUPIN_KAIHOH) == 1) {
					addyakuman tmpYakuInfo, "五筒開花", 1
				} else {
					addyaku tmpYakuInfo, "五筒開花", 4
				}
				delyaku tmpYakuInfo, "嶺上開花"
			}
		}
#ifndef SANMAS
		/* 中上開花 */
		if (getRule(RULE_CHUNSHAN_KAIHOH) != 0) {
			if (getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) == TILE_RED_DRAGON) {
				addyaku tmpYakuInfo, "中上開花", 2
				delyaku tmpYakuInfo, "嶺上開花"
			}
		}
#endif
		/* 頭槓和 */
		if (getRule(RULE_TOUKANHOH) != 0) {
			if (getKangFlag(GameStat, KANG_TOPFLAG) == 1) {
				addyakuman tmpYakuInfo, "頭槓和", 1
				delyaku tmpYakuInfo, "嶺上開花"
			}
		}
		/* サヨナラホームラン */
		if (getRule(RULE_SAYONARA_HOMERUN) != 0) {
			if (tilesLeft(GameStat) == 0) {
				addyaku tmpYakuInfo, "サヨナラホームラン", 3
				delyaku tmpYakuInfo, "嶺上開花"
			}
		}
#ifndef SANMAS
		/* 東花園 */
		if (getRule(RULE_HIGASHI_HANAZONO_TRIPLETS) != 0) {
			countKangz KangzCount, MianziDat
			if (((getRound(GameStat)/4) == PLAYER_EAST)&&(playerWind(targetPlayer, getRound(GameStat)) == PLAYER_EAST)&&(KangzCount(TILE_EAST_WIND) >= 1)) {
				addyakuman tmpYakuInfo, "東花園", 1
				delyaku tmpYakuInfo, "嶺上開花"
			}
		}
#endif
	} else {
		/* 海底
		   elseブロックに組み込むことで嶺上と海底が複合するのを防止 */
		if (tilesLeft(GameStat) == 0) {
			if (getTsumoAgariFlag(GameStat) == 1) {
				/* 海底ツモ　ここから */
				addyaku tmpYakuInfo, "海底摸月", 1
				/* 一筒摸月 */
				if (getRule(RULE_IIPIN_MOYUE) != 0) {
					if (getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) == TILE_SUIT_CIRCLES+1) {
						if (getRule(RULE_IIPIN_MOYUE) == 1) {
							addyakuman tmpYakuInfo, "一筒摸月", 1
						} else {
							addyaku tmpYakuInfo, "一筒摸月", 4
						}
						delyaku tmpYakuInfo, "海底摸月"
					}
				}
				/* 海底撈針 */
				if (getRule(RULE_HAITEI_RAOTSEN) != 0) {
					if (getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) == TILE_SUIT_CHARACTERS+1) {
						addyaku tmpYakuInfo, "海底撈針", 1
					}
				}
				/* 海底撈花 */
				if (getRule(RULE_HAITEI_RAOHWA) != 0) {
					if (getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) == TILE_SUIT_CIRCLES+5) {
						addyaku tmpYakuInfo, "海底撈花", 1
					}
				}
#ifndef SANMAS
				/* 発底摸月 */
				if (getRule(RULE_HATSUTEI_MOYUE) != 0) {
					if (getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) == TILE_GREEN_DRAGON) {
						addyaku tmpYakuInfo, "発底摸月", 2
						delyaku tmpYakuInfo, "海底摸月"
					}
				}
#endif
				/* 海底ツモ　ここまで */
			} else {
				/* 河底ロン　ここから */
				addyaku tmpYakuInfo, "河底撈魚", 1
				/* 九筒撈魚 */
				if (getRule(RULE_CHUUPIN_RAOYUI) != 0) {
					if (getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) == TILE_SUIT_CIRCLES+9) {
						if (getRule(RULE_CHUUPIN_RAOYUI) == 1) {
							addyakuman tmpYakuInfo, "九筒撈魚", 1
						} else {
							addyaku tmpYakuInfo, "九筒撈魚", 4
						}
						delyaku tmpYakuInfo, "河底撈魚"
					}
				}
#ifndef SANMAS
				/* 白底撈魚 */
				if (getRule(RULE_HAKUTEI_RAOYUI) != 0) {
					if (getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) == TILE_WHITE_DRAGON) {
						addyaku tmpYakuInfo, "白底撈魚", 2
						delyaku tmpYakuInfo, "河底撈魚"
					}
				}
#endif
				/* 河底ロン　ここまで */
			}
			/* ツモ・ロン共通の役　ここから */
			/* 泥底撈蟲 */
			if (getRule(RULE_NITEI_RAOCHUN) != 0) {
				yakuflagcount = 0
				repeat SIZE_OF_MELD_BUFFER-1, 1
					if (((MianziDat(cnt)/MELD_TYPE_STEP) != MELD_SEQUENCE_CONCEALED)&&((MianziDat(cnt)/MELD_TYPE_STEP) != MELD_TRIPLET_CONCEALED)) {
						yakuflagcount++ // 副露面子の数 暗槓もあってよい
					}
				loop
				if (yakuflagcount == 4) {
					addyaku tmpYakuInfo, "泥底撈蟲", 1
				}
			}
			/* ラストオーダー麻婆豆腐 */
			if (getRule(RULE_MAABOODOUFU) != 0) {
				if (getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) == TILE_WHITE_DRAGON) {
					addyakuman tmpYakuInfo, "ラストオーダー麻婆豆腐", 1
				}
			}
			/* 石の上にも三年 */
			if (getRule(RULE_THREE_YEARS_ON_STONE) != 0) {
				if ((getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_DOUBLE)||(getRichiFlag(GameStat, RICHI_FLAG, targetPlayer) == RIICHI_DOUBLE_IPPATSU)) {
					addyakuman tmpYakuInfo, "石の上にも三年", 1
					delyaku tmpYakuInfo, "ダブル立直"
					delyaku tmpYakuInfo, "ダブル開立直"
					delyaku tmpYakuInfo, "海底摸月"
					delyaku tmpYakuInfo, "河底撈魚"
				}
			}
			/* ツモ・ロン共通の役　ここまで */
		}
	}
	/* 槓振り */
	if ((getKangFlag(GameStat, KANG_CHAINFLAG) >= 1)&&(getRule(RULE_KAMBURI) != 0)&&(getKangFlag(GameStat, KANG_CHANKAN) == 1)) {
		addyaku tmpYakuInfo, "槓振り", 1
	}
	/* 搶槓 */
	if (getKangFlag(GameStat, KANG_CHANKAN) == 1) {
		addyaku tmpYakuInfo, "搶槓", 1
		/* 二索搶槓 */
		if (getRule(RULE_RYANZOH_CHANKAN) != 0) {
			if (getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) == TILE_SUIT_BAMBOOS+2) {
				if (getRule(RULE_RYANZOH_CHANKAN) == 1) {
					addyakuman tmpYakuInfo, "二索搶槓", 1
				} else {
					addyaku tmpYakuInfo, "二索搶槓", 4
				}
				delyaku tmpYakuInfo, "搶槓"
			}
		}
		/* 金鶏奪食 */
		if (getRule(RULE_JINJI_DUOSHI) != 0) {
			countseentiles SeenTiles, GameStat
			countTilesInHand TileCount, GameStat, targetPlayer
			if ((SeenTiles(getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer))+TileCount(getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer)) >= 4)&&(getTsumoAgariFlag(GameStat) == 1))||((SeenTiles(getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer))+TileCount(getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer)) > 4)&&(getTsumoAgariFlag(GameStat) == 0)) {
				if ((MachiType == MACHI_KANCHAN)||(MachiType == MACHI_PENCHAN)||(MachiType == MACHI_TANKI)) {
					addyaku tmpYakuInfo, "金鶏奪食", 1
				}
			}
		}
	}
	/* 八連荘 */
	if (getRule(RULE_PAARENCHAN) != 0) {
		if (getAgariChain(GameStat) == 8) {
			addyakuman tmpYakuInfo, "八連荘", 1
		}
	}
	if (getRule(RULE_BREAKING_PAARENCHAN) != 0) {
		if (getAgariChain(GameStat) == -1) {
			addyakuman tmpYakuInfo, "破回八連荘", 1
		}
	}
	/* 飛燕(ダブリー宣言牌でロンすると役が付く) */
	if ((getRule(RULE_TSUBAME_GAESHI) != 0)&&(getRichiCounterFlag(GameStat) == 2)) {
		addyakuman tmpYakuInfo, "飛燕", 2
	}else:if (getRule(RULE_TSUBAME_GAESHI) != 0) {
		/* 燕返し(立直宣言牌でロンすると役が付く) */
		if (getRichiCounterFlag(GameStat) > 0) {
			addyaku tmpYakuInfo, "燕返し", 1
		}
	}
	/* 四馬路 */
	if (getRule(RULE_SUMARO) != 0) {
		if (getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) == TILE_SUIT_CHARACTERS+4)&&(getSumaroFlag(GameStat, targetPlayer) == 1)&&(getTsumoAgariFlag(GameStat) == 0) {
			addyaku tmpYakuInfo, "四馬路", 1
		}
	}
#ifndef SANMAS
	/* 客来和 */
	if (getRule(RULE_OTAKAZE_RON) != 0) {
		yakuFlag = 0
		if ((getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) >= TILE_WIND_MIN)&&(getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) <= TILE_WIND_MAX)) {yakuFlag = 1}
		repeat TILE_WIND_MAX-TILE_WIND_MIN+1
			if (getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) == cnt+TILE_WIND_MIN) {
				if ((getRound(GameStat)/4) == cnt) {yakuFlag = 0}
				if (playerWind(targetPlayer, getRound(GameStat)) == cnt) {
					yakuFlag = 0
				}
				if (getRule(RULE_KAIMENKAZE) != 0) {
					if (playerWind(getWareme(GameStat), getRound(GameStat)) == cnt) {
						yakuFlag = 0
					}
				}
#ifndef SANMAT
				if (getRule(RULE_URAKAZE) != 0) {
					if (playerWind(targetPlayer+2, getRound(GameStat)) == cnt) {yakuFlag = 0}
				}
#endif
			}
		loop
		if ((yakuFlag == 1)&&(getTsumoAgariFlag(GameStat) == 0)) {
			addyaku tmpYakuInfo, "客来和", 1
		}
	}
#endif
	/* 鳳還巣系列の役 */
	tmpRuleCodeList = RULE_HOUKANSOU, RULE_GEKKANJUN, RULE_SHINRIISHOU, RULE_KINKI_KIKAN, RULE_HOKUTO_SHOUKAN, RULE_DAIJA_KANKETSU, RULE_DONGFENGCHUI, RULE_NANFENGCHUI, RULE_XIFENGCHUI, RULE_BEIFENGCHUI
	tmpTileCodeList = TILE_SUIT_BAMBOOS+1, TILE_SUIT_CIRCLES+1, TILE_SUIT_CHARACTERS+1, TILE_SUIT_BAMBOOS+7, TILE_SUIT_CIRCLES+7, TILE_SUIT_CHARACTERS+7, TILE_EAST_WIND, TILE_SOUTH_WIND, TILE_WEST_WIND, TILE_NORTH_WIND
	sdim tmpYakuNameList, 16, length(tmpRuleCodeList)
	tmpYakuNameList = "鳳還巣", "月還巡", "針戻手", "金亀帰還", "北斗召還", "大蛇還穴", "東風吹", "南風吹", "西風吹", "北風吹"
	repeat length(tmpRuleCodeList)
		if (getRule(tmpRuleCodeList(cnt)) != 0) {
			yakuFlag = 0: tmpcnt = cnt
			repeat DiscardPointer(GameStat, targetPlayer), 1
				if ((getDiscard(GameStat, DISCARD_TILECODE, cnt, targetPlayer) \ SUTEHAI_TYPE_STEP) == tmpTileCodeList(tmpcnt)) {yakuFlag = 1}
			loop
			if ((getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) == tmpTileCodeList(cnt))&&(yakuFlag == 1)&&(getTsumoAgariFlag(GameStat) == 1)&&(MachiType == MACHI_TANKI)) {
				if (getRule(tmpRuleCodeList(cnt)) == 2) {addyaku tmpYakuInfo, tmpYakuNameList(cnt), 2}
				else {addyaku tmpYakuInfo, tmpYakuNameList(cnt), 1}
			}
		}
	loop
	/* 金龍天和 */
	if (getRule(RULE_GOLDDRAGON) != 0) {
		if ((getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) / TILE_SUIT_STEP) == (TILE_SUIT_CIRCLES / TILE_SUIT_STEP))&&(getTurn(GameStat) <= 3) {
			addyaku tmpYakuInfo, "金龍天和", 1
		}
	}
#ifndef SANMAS
	/* 旋風栄和 */
	if (getRule(RULE_WHIRLWIND) != 0) {
		if (getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) >= TILE_WIND_MIN)&&(getHand(GameStat, HAND_TILECODE, TSUMOHAI_INDEX, targetPlayer) <= TILE_WIND_MAX)&&(getTurn(GameStat) <= 3) {
			addyakuman tmpYakuInfo, "旋風栄和", 1
		}
	}
#endif
	/* 青天の霹靂 */
	if (getRule(RULE_BOLT_FROM_THE_BLUE) != 0) {
		yakuFlagCount = 0
		repeat NUM_OF_PLAYERS
			if (getMeld(GameStat, MELD_TILECODE, 0, cnt) == 0)&&(getRichiFlag(GameStat, RICHI_FLAG, cnt) == RIICHI_NO) {
				yakuFlagCount++
			}
		loop
		if ((yakuFlagCount >= NUM_OF_PLAYERS)&&(getTurn(GameStat) <= 4)) {
			addyaku tmpYakuInfo, "青天の霹靂", 4
		}
	}
return
#global
