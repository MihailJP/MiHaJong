/*=============================
 * HSP麻雀クライアントMiHaJong
 *  [断幺・全帯判定ルーチン]
 *=============================
 */

/* タンヤオ、チャンタなどの役 */
#module
#include "const.as"
#deffunc yaojiuyaku var GameStat, var tmpYakuInfo, array MianziDat, int targetPlayer
	trace "断幺・全帯系の処理に入ります。"
	tmpyaojiu = 0: ShuntsuCount = 0: JihaiCount = 0
	OneCount = 0: NineCount = 0
	repeat SIZE_OF_MELD_BUFFER
		switch (MianziDat(cnt) \ TILE_CODE_MAXIMUM)
#ifndef SANMAS
			case TILE_EAST_WIND: case TILE_SOUTH_WIND: case TILE_WEST_WIND: case TILE_NORTH_WIND:
			case TILE_WHITE_DRAGON: case TILE_GREEN_DRAGON: case TILE_RED_DRAGON:
				JihaiCount++
				/* FALLTHRU */
#endif
			case TILE_SUIT_CHARACTERS+1: case TILE_SUIT_CHARACTERS+9:
			case TILE_SUIT_CIRCLES+1: case TILE_SUIT_CIRCLES+9:
			case TILE_SUIT_BAMBOOS+1: case TILE_SUIT_BAMBOOS+9:
				tmpyaojiu++
			swbreak
		swend
		switch (MianziDat(cnt) \ TILE_CODE_MAXIMUM)
			case TILE_SUIT_CHARACTERS+1: case TILE_SUIT_CIRCLES+1: case TILE_SUIT_BAMBOOS+1:
				OneCount++
			swbreak
			case TILE_SUIT_CHARACTERS+9: case TILE_SUIT_CIRCLES+9: case TILE_SUIT_BAMBOOS+9:
				NineCount++
			swbreak
		swend
		if ((MianziDat(cnt) < MELD_TRIPLET*MELD_TYPE_STEP)&&((MianziDat(cnt) \ TILE_SUIT_STEP) == 7)&&(cnt > 0)) {
			tmpyaojiu++: NineCount++
		}
		if ((MianziDat(cnt) < MELD_TRIPLET*MELD_TYPE_STEP)&&(cnt > 0)) {ShuntsuCount++}
	loop
	if (tmpyaojiu == 0) {
		if ((getMenzen(GameStat, targetPlayer) == 1)||(getRule(RULE_KUITAN) != 1)) {
			tmpyakuCensored = 0 // 大車輪が成立してたら飛ばす
			tmpyakuCensored += searchyaku(tmpYakuInfo, "大車輪")
			tmpyakuCensored += searchyaku(tmpYakuInfo, "大竹林")
			tmpyakuCensored += searchyaku(tmpYakuInfo, "大数隣")
			if (tmpyakuCensored == 0) {
				if ((getRule(RULE_KUITAN) == 2)&&(getMenzen(GameStat, targetPlayer) == 0)) {addYakuInfo tmpYakuInfo, YAKUINF_HAN_BASE, -1: addYakuInfo tmpYakuInfo, YAKUINF_HAN_BONUS, 1}
				addyaku tmpYakuInfo, "断幺九", 1
			}
		}
	}
	if (tmpyaojiu == SIZE_OF_MELD_BUFFER) {
		if (ShuntsuCount == 0) {
#ifndef SANMAS
			if (JihaiCount == 0) {
#endif
				addyakuman tmpYakuInfo, "清老頭", 1
#ifndef SANMAS
			} else:if (JihaiCount == SIZE_OF_MELD_BUFFER) {
				addyakuman tmpYakuInfo, "字一色", 1
				// 字一色が成立したら混一色の成立を解除する(青天井ルール用)
				// 九連に門清が複合するとか、そういう取り決めはあるけど、
				// 字一色に混一色がついてくるのは完全にバグ。
				delyaku tmpYakuInfo, "混一色"
			} else:if ((getRule(RULE_FOUR_HONORS) != 0)&&(JihaiCount == 4)&&(MianziDat(0) < TILE_NUMERAL_MAX)) {
				addyakuman tmpYakuInfo, "四字刻", 1
			} else:if (getRule(RULE_HONROUTOU) != 0) {
				addyaku tmpYakuInfo, "混老頭", 3
			} else {
				addyaku tmpYakuInfo, "混老頭", 2
			}
#endif
		} else {
#ifndef SANMAS
			if (JihaiCount == 0) {
#endif
				if (searchyaku(tmpYakuInfo, "清海湖") == 0) {
					addyaku tmpYakuInfo, "純全帯幺九", 2+getMenzen(GameStat, targetPlayer)
				}
#ifndef SANMAS
			} else {
				addyaku tmpYakuInfo, "混全帯幺九", 1+getMenzen(GameStat, targetPlayer)
				if (getRule(RULE_HENCHANTAIYAO) != 0) {
					if ((OneCount == 0)||(NineCount == 0)) {
						addyaku tmpYakuInfo, "偏全帯幺九", 2+getMenzen(GameStat, targetPlayer)
						delyaku tmpYakuInfo, "混全帯幺九"
					}
				}
			}
#endif
		}
	}
return
#global
