/*=============================
 * HSP麻雀クライアントMiHaJong
 *     [半荘終了ルーチン]
 *=============================
 */

/* 半荘終了時の処理 */
	dim hncnRank, 4
#ifdef SANMA
	repeat 3
		hncnRank(cnt) = 1
		tmpcnt = cnt
		repeat 3
#else
	repeat 4
		hncnRank(cnt) = 1
		tmpcnt = cnt
		repeat 4
#endif
			if (getScore(GameStat,cnt,7) > getScore(GameStat,tmpcnt,7)) {hncnRank(tmpcnt)++}
			if (getScore(GameStat,cnt,7) == getScore(GameStat,tmpcnt,7)) {
				if (getScore(GameStat,cnt,6) > getScore(GameStat,tmpcnt,6)) {hncnRank(tmpcnt)++}
				if (getScore(GameStat,cnt,6) == getScore(GameStat,tmpcnt,6)) {
					if (getScore(GameStat,cnt,5) > getScore(GameStat,tmpcnt,5)) {hncnRank(tmpcnt)++}
					if (getScore(GameStat,cnt,5) == getScore(GameStat,tmpcnt,5)) {
						if (getScore(GameStat,cnt,4) > getScore(GameStat,tmpcnt,4)) {hncnRank(tmpcnt)++}
						if (getScore(GameStat,cnt,4) == getScore(GameStat,tmpcnt,4)) {
							if (getScore(GameStat,cnt,3) > getScore(GameStat,tmpcnt,3)) {hncnRank(tmpcnt)++}
							if (getScore(GameStat,cnt,3) == getScore(GameStat,tmpcnt,3)) {
								if (getScore(GameStat,cnt,2) > getScore(GameStat,tmpcnt,2)) {hncnRank(tmpcnt)++}
								if (getScore(GameStat,cnt,2) == getScore(GameStat,tmpcnt,2)) {
									if (getScore(GameStat,cnt,1) > getScore(GameStat,tmpcnt,1)) {hncnRank(tmpcnt)++}
									if (getScore(GameStat,cnt,1) == getScore(GameStat,tmpcnt,1)) {
										if (getScore(GameStat,cnt,0) > getScore(GameStat,tmpcnt,0)) {hncnRank(tmpcnt)++}
										if ((getScore(GameStat,cnt,0) == getScore(GameStat,tmpcnt,0))&&(tmpcnt > cnt)) {hncnRank(tmpcnt)++}
									}
								}
							}
						}
					}
				}
			}
		loop
	loop
	chatappend "-------------\n*** 終了\n"
	if (WatchModeFlag == 0) {
		if (hncnRank(getPlayer(GameStat)) == 1) {
			bgmcode = MUS_ENDING: gosub *bgmplay
			statmes "終了 あなたがトップです"
		} else {
			bgmcode = MUS_ENDING2: gosub *bgmplay
			statmes "終了 あなたは"+hncnRank(getPlayer(GameStat))+"位でした"
		}
	} else {
		bgmcode = MUS_ENDING2: gosub *bgmplay
		statmes "終了 Watch Mode"
	}
	vanish: commonswitch GameStat, WatchModeFlag
	setHonba GameStat, hncnOrigHonba
	setRound GameStat, hncnOrigTurn
	repeat 4
		setCall cnt, ""
	loop
	hncnMsg = "　終了　"
	dsplay SND_PAGE: gosub *redrscreen: await 500
#ifdef SANMA
	repeat 3
		if (hncnRank(cnt) == 1) {setCall cnt, "　１位　"}
	loop: dsplay SND_TYPE: gosub *redrscreen: await 500
	repeat 3
		if (hncnRank(cnt) == 2) {setCall cnt, "　２位　"}
	loop: dsplay SND_TYPE: gosub *redrscreen: await 500
	repeat 3
		if (hncnRank(cnt) == 3) {setCall cnt, "　３位　"}
	loop: dsplay SND_TYPE: gosub *redrscreen: await 3000
#else
	repeat 4
		if (hncnRank(cnt) == 1) {setCall cnt, "　１位　"}
	loop: dsplay SND_TYPE: gosub *redrscreen: await 500
	repeat 4
		if (hncnRank(cnt) == 2) {setCall cnt, "　２位　"}
	loop: dsplay SND_TYPE: gosub *redrscreen: await 500
	repeat 4
		if (hncnRank(cnt) == 3) {setCall cnt, "　３位　"}
	loop: dsplay SND_TYPE: gosub *redrscreen: await 500
	repeat 4
		if (hncnRank(cnt) == 4) {setCall cnt, "　４位　"}
	loop: dsplay SND_TYPE: gosub *redrscreen: await 3000
#endif
	if (getDeposit(GameStat)) {
		dim hncnPointDelta, 4, 8
		repeat 4
			if (hncnRank(cnt) == 1) {hncnPointDelta(cnt) += getDeposit(GameStat)*10}
		loop
		hncnMsg = "供託清算"
		gosub *putdelta
		redraw 1: await 3000
		pointcalc GameStat, hncnPointDelta
	}
	setDeposit GameStat, 0

	if ((getRule(RULE_YAKITORI) == "1")||(getRule(RULE_YAKITORI) == "2")) {
#ifdef SANMA
		if ((getYakitori(GameStat, 0)+getYakitori(GameStat, 1)+getYakitori(GameStat, 2)) > 0) {
			dim hncnPointDelta, 4, 8
			repeat 3
				if (getYakitori(GameStat, cnt) == 1) {
					hncnPointDelta(cnt, 0) -= 50*int(getRule(RULE_YAKITORI))
					repeat 3
						if (hncnRank(cnt) == 1) {
							hncnPointDelta(cnt, 0) += 50*int(getRule(RULE_YAKITORI))
						}
					loop
				}
			loop
#else
		if ((getYakitori(GameStat, 0)+getYakitori(GameStat, 1)+getYakitori(GameStat, 2)+getYakitori(GameStat, 3)) > 0) {
			dim hncnPointDelta, 4, 0
			repeat 4
				if (getYakitori(GameStat, cnt) == 1) {
					hncnPointDelta(cnt, 0) -= 50*int(getRule(RULE_YAKITORI))
					repeat 4
						if (hncnRank(cnt) == 1) {
							hncnPointDelta(cnt, 0) += 50*int(getRule(RULE_YAKITORI))
						}
					loop
				}
			loop
#endif
			hncnMsg = "焼鳥罰符"
			gosub *putdelta
			redraw 1: await 3000
			pointcalc GameStat, hncnPointDelta
		}
	}
	if ((getRule(RULE_YAKITORI) == "3")||(getRule(RULE_YAKITORI) == "4")||(getRule(RULE_YAKITORI) == "5")) {
		if (getRule(RULE_CHIP) != "0") {
#ifdef SANMA
			if ((getYakitori(GameStat, 0)+getYakitori(GameStat, 1)+getYakitori(GameStat, 2)) > 0) {
				dim hncnPointDelta, 4
				repeat 3
					if (getYakitori(GameStat, cnt) == 1) {
						hncnPointDelta(cnt) -= (int(getRule(RULE_YAKITORI))-2)
						repeat 3
							if (hncnRank(cnt) == 1) {
								hncnPointDelta(cnt) += (int(getRule(RULE_YAKITORI))-2)
							}
						loop
					}
				loop
#else
			if ((getYakitori(GameStat, 0)+getYakitori(GameStat, 1)+getYakitori(GameStat, 2)+getYakitori(GameStat, 3)) > 0) {
				dim hncnPointDelta, 4
				repeat 4
					if (getYakitori(GameStat, cnt) == 1) {
						hncnPointDelta(cnt) -= (int(getRule(RULE_YAKITORI))-2)
						repeat 4
							if (hncnRank(cnt) == 1) {
								hncnPointDelta(cnt) += (int(getRule(RULE_YAKITORI))-2)
							}
						loop
					}
				loop
#endif
				hncnMsg = "焼鳥罰符"
				gosub *putchipdelta
				redraw 1: await 3000
				repeat 4
					addChip GameStat, cnt, hncnPointDelta(cnt)
				loop
			}
		}
	}

	dim hncnPointDelta, 4, 8
#ifdef SANMA
	PlusCount = 0
	repeat 3 // 沈みウマの計算用に浮いてる人数を数える
		if ((getScore(GameStat,cnt, 0) >= 400)||(getScore(GameStat,cnt, 1) > 0)||(getScore(GameStat,cnt, 2) > 0)||(getScore(GameStat,cnt, 3) > 0)||(getScore(GameStat,cnt, 4) > 0)||(getScore(GameStat,cnt, 5) > 0)||(getScore(GameStat,cnt, 6) > 0)||(getScore(GameStat,cnt, 7) > 0)) {PlusCount++}
	loop
	if (getRule(RULE_POINT_BASIS) != "C") {
		repeat 3
			/* 順位ウマ */
			if (getRule(RULE_POINT_BASIS) == "D") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 30}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 30}
			}
			if (getRule(RULE_POINT_BASIS) == "E") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 50}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 50}
			}
			if (getRule(RULE_POINT_BASIS) == "F") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 80}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 80}
			}
			if (getRule(RULE_POINT_BASIS) == "0") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 100}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 100}
			}
			if (getRule(RULE_POINT_BASIS) == "1") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 200}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 200}
			}
			if (getRule(RULE_POINT_BASIS) == "2") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 300}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 300}
			}
			if (getRule(RULE_POINT_BASIS) == "3") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 400}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 400}
			}
			if (getRule(RULE_POINT_BASIS) == "4") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 500}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 500}
			}
			if (getRule(RULE_POINT_BASIS) == "5") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 600}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 600}
			}
			/* 複合ウマ */
			if (getRule(RULE_POINT_BASIS) == "6") {
				if (hncnRank(cnt) == 1) {
					if (PlusCount < 2) {hncnPointDelta(cnt,0) += 120}
					else {hncnPointDelta(cnt) += 80}
				}
				if (hncnRank(cnt) == 2) {
					if (PlusCount < 2) {hncnPointDelta(cnt,0) -= 40}
				}
				if (hncnRank(cnt) == 3) {
					hncnPointDelta(cnt) -= 80
				}
			}
			if (getRule(RULE_POINT_BASIS) == "7") {
				if (hncnRank(cnt) == 1) {
					if (PlusCount < 2) {hncnPointDelta(cnt,0) += 150}
					else {hncnPointDelta(cnt) += 100}
				}
				if (hncnRank(cnt) == 2) {
					if (PlusCount < 2) {hncnPointDelta(cnt,0) -= 50}
				}
				if (hncnRank(cnt) == 3) {
					hncnPointDelta(cnt) -= 100
				}
			}
			if (getRule(RULE_POINT_BASIS) == "8") {
				if (hncnRank(cnt) == 1) {
					if (PlusCount < 2) {hncnPointDelta(cnt,0) += 300}
					else {hncnPointDelta(cnt) += 200}
				}
				if (hncnRank(cnt) == 2) {
					if (PlusCount < 2) {hncnPointDelta(cnt,0) -= 100}
				}
				if (hncnRank(cnt) == 3) {
					hncnPointDelta(cnt) -= 200
				}
			}
			/* 沈みウマ */
			if (getRule(RULE_POINT_BASIS) == "9") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 50*(3-PlusCount)}
				if (hncnRank(cnt) > PlusCount) {hncnPointDelta(cnt,0) -= 50}
			}
			if (getRule(RULE_POINT_BASIS) == "A") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 100*(3-PlusCount)}
				if (hncnRank(cnt) > PlusCount) {hncnPointDelta(cnt,0) -= 100}
			}
			if (getRule(RULE_POINT_BASIS) == "B") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 200*(3-PlusCount)}
				if (hncnRank(cnt) > PlusCount) {hncnPointDelta(cnt,0) -= 200}
			}
		loop
#else
	PlusCount = 0
	repeat 4 // 沈みウマの計算用に浮いてる人数を数える
		if ((getScore(GameStat,cnt, 0) >= 300)||(getScore(GameStat,cnt, 1) > 0)||(getScore(GameStat,cnt, 2) > 0)||(getScore(GameStat,cnt, 3) > 0)||(getScore(GameStat,cnt, 4) > 0)||(getScore(GameStat,cnt, 5) > 0)||(getScore(GameStat,cnt, 6) > 0)||(getScore(GameStat,cnt, 7) > 0)) {PlusCount++}
	loop
	if (getRule(RULE_POINT_BASIS) != "C") {
		repeat 4
			/* 順位ウマ */
			if (getRule(RULE_POINT_BASIS) == "D") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 30}
				if (hncnRank(cnt) == 4) {hncnPointDelta(cnt,0) -= 30}
			}
			if (getRule(RULE_POINT_BASIS) == "E") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 50}
				if (hncnRank(cnt) == 4) {hncnPointDelta(cnt,0) -= 50}
			}
			if (getRule(RULE_POINT_BASIS) == "F") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 50}
				if (hncnRank(cnt) == 2) {hncnPointDelta(cnt,0) += 30}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 30}
				if (hncnRank(cnt) == 4) {hncnPointDelta(cnt,0) -= 50}
			}
			if (getRule(RULE_POINT_BASIS) == "0") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 100}
				if (hncnRank(cnt) == 2) {hncnPointDelta(cnt,0) += 50}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 50}
				if (hncnRank(cnt) == 4) {hncnPointDelta(cnt,0) -= 100}
			}
			if (getRule(RULE_POINT_BASIS) == "1") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 200}
				if (hncnRank(cnt) == 2) {hncnPointDelta(cnt,0) += 100}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 100}
				if (hncnRank(cnt) == 4) {hncnPointDelta(cnt,0) -= 200}
			}
			if (getRule(RULE_POINT_BASIS) == "2") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 300}
				if (hncnRank(cnt) == 2) {hncnPointDelta(cnt,0) += 100}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 100}
				if (hncnRank(cnt) == 4) {hncnPointDelta(cnt,0) -= 300}
			}
			if (getRule(RULE_POINT_BASIS) == "3") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 400}
				if (hncnRank(cnt) == 2) {hncnPointDelta(cnt,0) += 200}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 200}
				if (hncnRank(cnt) == 4) {hncnPointDelta(cnt,0) -= 400}
			}
			if (getRule(RULE_POINT_BASIS) == "4") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 500}
				if (hncnRank(cnt) == 2) {hncnPointDelta(cnt,0) += 200}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 200}
				if (hncnRank(cnt) == 4) {hncnPointDelta(cnt,0) -= 500}
			}
			if (getRule(RULE_POINT_BASIS) == "5") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 600}
				if (hncnRank(cnt) == 2) {hncnPointDelta(cnt,0) += 200}
				if (hncnRank(cnt) == 3) {hncnPointDelta(cnt,0) -= 200}
				if (hncnRank(cnt) == 4) {hncnPointDelta(cnt,0) -= 600}
			}
			/* 複合ウマ */
			if (getRule(RULE_POINT_BASIS) == "6") {
				if (hncnRank(cnt) == 1) {
					switch PlusCount
						case 1: hncnPointDelta(cnt,0) += 150: swbreak
						case 3: hncnPointDelta(cnt,0) += 70: swbreak
						default: hncnPointDelta(cnt,0) += 100: swbreak
					swend
				}
				if (hncnRank(cnt) == 2) {
					switch PlusCount
						case 1: hncnPointDelta(cnt,0) -= 30: swbreak
						default: hncnPointDelta(cnt,0) += 50: swbreak
					swend
				}
				if (hncnRank(cnt) == 3) {
					switch PlusCount
						case 3: hncnPointDelta(cnt,0) += 30: swbreak
						default: hncnPointDelta(cnt,0) -= 50: swbreak
					swend
				}
				if (hncnRank(cnt) == 4) {
					switch PlusCount
						case 1: hncnPointDelta(cnt,0) -= 70: swbreak
						case 3: hncnPointDelta(cnt,0) -= 150: swbreak
						default: hncnPointDelta(cnt,0) -= 100: swbreak
					swend
				}
			}
			if (getRule(RULE_POINT_BASIS) == "7") {
				if (hncnRank(cnt) == 1) {
					switch PlusCount
						case 1: hncnPointDelta(cnt,0) += 120: swbreak
						default: hncnPointDelta(cnt,0) += 80: swbreak
					swend
				}
				if (hncnRank(cnt) == 2) {
					switch PlusCount
						case 1: hncnPointDelta(cnt,0) -= 10: swbreak
						case 3: hncnPointDelta(cnt,0) += 30: swbreak
						default: hncnPointDelta(cnt,0) += 40: swbreak
					swend
				}
				if (hncnRank(cnt) == 3) {
					switch PlusCount
						case 1: hncnPointDelta(cnt,0) -= 30: swbreak
						case 3: hncnPointDelta(cnt,0) += 10: swbreak
						default: hncnPointDelta(cnt,0) -= 40: swbreak
					swend
				}
				if (hncnRank(cnt) == 4) {
					switch PlusCount
						case 3: hncnPointDelta(cnt,0) -= 120: swbreak
						default: hncnPointDelta(cnt,0) -= 80: swbreak
					swend
				}
			}
			if (getRule(RULE_POINT_BASIS) == "8") {
				if (hncnRank(cnt) == 1) {
					switch PlusCount
						case 1: hncnPointDelta(cnt,0) += 600: swbreak
						case 2: hncnPointDelta(cnt,0) += 400: swbreak
						case 3: hncnPointDelta(cnt,0) += 300: swbreak
					swend
				}
				if (hncnRank(cnt) == 2) {
					switch PlusCount
						case 1: hncnPointDelta(cnt,0) -= 100: swbreak
					swend
				}
				if (hncnRank(cnt) == 3) {
					switch PlusCount
						case 1: hncnPointDelta(cnt,0) -= 200: swbreak
						case 2: hncnPointDelta(cnt,0) -= 100: swbreak
					swend
				}
				if (hncnRank(cnt) == 4) {
					switch PlusCount
						case 1: hncnPointDelta(cnt,0) -= 300: swbreak
						case 2: hncnPointDelta(cnt,0) -= 300: swbreak
						case 3: hncnPointDelta(cnt,0) -= 300: swbreak
					swend
				}
			}
			/* 沈みウマ */
			if (getRule(RULE_POINT_BASIS) == "9") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 50*(4-PlusCount)}
				if (hncnRank(cnt) > PlusCount) {hncnPointDelta(cnt,0) -= 50}
			}
			if (getRule(RULE_POINT_BASIS) == "A") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 100*(4-PlusCount)}
				if (hncnRank(cnt) > PlusCount) {hncnPointDelta(cnt,0) -= 100}
			}
			if (getRule(RULE_POINT_BASIS) == "B") {
				if (hncnRank(cnt) == 1) {hncnPointDelta(cnt,0) += 200*(4-PlusCount)}
				if (hncnRank(cnt) > PlusCount) {hncnPointDelta(cnt,0) -= 200}
			}
		loop
#endif
		hncnMsg = " 順位点 "
		gosub *putdelta
		redraw 1: await 3000
		pointcalc GameStat, hncnPointDelta
	}
	
	dim hncnPointDelta, 4, 8
#ifdef SANMA
	if (getRule(RULE_STARTING_POINT) != "1") {
		repeat 3
			if (hncnRank(cnt) == 1) {
				switch int(getRule(RULE_STARTING_POINT))
					case 0: hncnPointDelta(cnt) += 150: swbreak
					case 4: hncnPointDelta(cnt) += 450: swbreak
					case 5: hncnPointDelta(cnt) += 300: swbreak
				swend
			}
			if (hncnRank(cnt) == 3) {
				switch int(getRule(RULE_STARTING_POINT))
					case 2: hncnPointDelta(cnt) -= 150: swbreak
					case 3: hncnPointDelta(cnt) -= 300: swbreak
				swend
			}
		loop
		if ((getRule(RULE_STARTING_POINT) == "2")||(getRule(RULE_STARTING_POINT) == "3")) {
			hncnMsg = "ラスペナ"
		} else {hncnMsg = "トップ賞"}
#else
	if (getRule(RULE_STARTING_POINT) != "2") {
		repeat 4
			if (hncnRank(cnt) == 1) {
				switch int(getRule(RULE_STARTING_POINT))
					case 0: hncnPointDelta(cnt) += 200: swbreak
					case 1: hncnPointDelta(cnt) += 120: swbreak
					case 5: hncnPointDelta(cnt) += 400: swbreak
				swend
			}
			if (hncnRank(cnt) == 4) {
				switch int(getRule(RULE_STARTING_POINT))
					case 3: hncnPointDelta(cnt) -= 200: swbreak
					case 4: hncnPointDelta(cnt) -= 400: swbreak
				swend
			}
		loop
		if ((getRule(RULE_STARTING_POINT) == "3")||(getRule(RULE_STARTING_POINT) == "4")) {
			hncnMsg = "ラスペナ"
		} else {hncnMsg = "トップ賞"}
#endif
		gosub *putdelta
		redraw 1: await 3000
		pointcalc GameStat, hncnPointDelta
	}
	
	/* 最終的なスコアを計算する */
	dim hncnPointScore, 4, 8
#ifdef SANMA
	repeat 3
		if (hncnRank(cnt) > 1) {
			if ((getScore(GameStat,cnt, 0) >= 400)||(getScore(GameStat,cnt, 1) > 0)||(getScore(GameStat,cnt, 2) > 0)||(getScore(GameStat,cnt, 3) > 0)||(getScore(GameStat,cnt, 4) > 0)||(getScore(GameStat,cnt, 5) > 0)||(getScore(GameStat,cnt, 6) > 0)||(getScore(GameStat,cnt, 7) > 0)) {
				hncnPointScore(cnt, 0) = ((getScore(GameStat,cnt, 0)-400)+5)/10
			} else {
				hncnPointScore(cnt, 0) = ((getScore(GameStat,cnt, 0)-400)-5)/10
			}
			if (getRule(RULE_CHIP) == "1") {
				hncnPointScore(cnt, 0) += getChip(GameStat, cnt)*2
			}
			if (getRule(RULE_CHIP) == "2") {
				hncnPointScore(cnt, 0) += getChip(GameStat, cnt)*5
			}
			tmpcnt = cnt
			repeat 7, 1: hncnPointScore(tmpcnt, cnt) = getScore(GameStat,tmpcnt, cnt): loop
		}
	loop
	gosub *scoreflagfix
	dim hncnPointScoreTmp, 8
	repeat 8
		hncnPointScoreTmp(cnt) = hncnPointScore(0, cnt)+hncnPointScore(1, cnt)+hncnPointScore(2, cnt)
	loop
	repeat 3
		if (hncnRank(cnt) == 1) {
			tmpcnt = cnt
			repeat 8: hncnPointScore(tmpcnt, cnt) = 0-hncnPointScoreTmp(cnt): loop
		}
	loop
#else
	repeat 4
		if (hncnRank(cnt) > 1) {
			if ((getScore(GameStat,cnt, 0) >= 300)||(getScore(GameStat,cnt, 1) > 0)||(getScore(GameStat,cnt, 2) > 0)||(getScore(GameStat,cnt, 3) > 0)||(getScore(GameStat,cnt, 4) > 0)||(getScore(GameStat,cnt, 5) > 0)||(getScore(GameStat,cnt, 6) > 0)||(getScore(GameStat,cnt, 7) > 0)) {
				hncnPointScore(cnt, 0) = ((getScore(GameStat,cnt, 0)-300)+5)/10
			} else {
				hncnPointScore(cnt, 0) = ((getScore(GameStat,cnt, 0)-300)-5)/10
			}
			if (getRule(RULE_CHIP) == "1") {
				hncnPointScore(cnt, 0) += getChip(GameStat, cnt)*2
			}
			if (getRule(RULE_CHIP) == "2") {
				hncnPointScore(cnt, 0) += getChip(GameStat, cnt)*5
			}
			tmpcnt = cnt
			repeat 7, 1: hncnPointScore(tmpcnt, cnt) = getScore(GameStat,tmpcnt, cnt): loop
		}
	loop
	gosub *scoreflagfix
	dim hncnPointScoreTmp, 8
	repeat 8
		hncnPointScoreTmp(cnt) = hncnPointScore(0, cnt)+hncnPointScore(1, cnt)+hncnPointScore(2, cnt)+hncnPointScore(3, cnt)
	loop
	repeat 4
		if (hncnRank(cnt) == 1) {
			tmpcnt = cnt
			repeat 8: hncnPointScore(tmpcnt, cnt) = 0-hncnPointScoreTmp(cnt): loop
		}
	loop
#endif
	gosub *scoreflagfix
	repeat 4
		tmpcnt=cnt
		repeat 7
			hncnPointScore(tmpcnt, cnt) += (hncnPointScore(tmpcnt, cnt+1) \ 1000)*100000
			hncnPointScore(tmpcnt, cnt+1) /= 1000
		loop
	loop
	deltatxt hncnPointScore, 1
#ifdef SANMA
	repeat 3
#else
	repeat 4
#endif
		if (getCall(cnt) == "") {setCall cnt, "　 ０ 　"}
	loop
	hncnMsg = "最終成績"
	repeat 4
		tmptmprnk = cnt+1
		repeat 4
			if (hncnRank(cnt) == tmptmprnk) {
				tmpscoretxt = bignumtotext(hncnPointScore, cnt, 1, "", "△")
				tmptxt += " "+tmpscoretxt+"点"
				chatappend "*** "+tmptmprnk+"位 "+tmpscoretxt+" "+PlayerName(cnt)+"\n"
			}
		loop
	loop
	dsplay SND_YAKULST2: gosub *redrscreen
	redraw 1
	if (GameMode != 0) {sockclose SOCK_GAME+0: sockclose SOCK_CHAT+0: sockclose SOCK_CHAT+1: sockclose SOCK_CHAT+2: sockclose SOCK_CHAT+3}
	if (GameMode == 1) {sockclose SOCK_GAME+1: sockclose SOCK_GAME+2: sockclose SOCK_GAME+3}
	if (GameMode != 0) {chatappend "*** 切断しました\n"}
	gsel SCR_CHAT: objgray 1, 0: objgray 2, 0: gsel 0
	font fontname, 48, 0: objsize 200, 60
	pos 620, 560: button goto "確認", *finishbtn: tooltip stat-STATBOX, "タイトル画面に戻ります"
	haifusave
	repeat
		gosub *redrscreen
		await 1000
	loop

*finishbtn
	dsplay SND_BUTTON
	closingchat : chatwnd 0
	await 10
	goto *startgame
