/*=============================
 * HSP麻雀クライアントMiHaJong
 *   [タイトル画面ルーチン]
 *=============================
 */

/* タイトル画面 */
*titlemenu
	debug "タイトル画面を準備します。"
	gsel 0
	redraw 0: vanish
	showbackground
	gmode gmode_pixela: pos 100, 80: gcopy SCR_TITLE_LOGO, 0, 0, 640, 200: gmode gmode_mem
	font fontname, 28, 0
	borderedtxt2 "Version "+VERSION_MAJ+"."+VERSION_MED+"."+VERSION_MIN+VERSION_MIC, 530, 125, 255, 255, 255, 1, 28, 192, 192, 192
	tmptxt = "Copyright (c) 2011 MihailJP All rights reserved"
	borderedtxt2 tmptxt, 825-(strlen(tmptxt)*10), 595, 255, 255, 255, 1, 20, 192, 192, 192
#ifdef SANMAS
	borderedtxt2 "数牌三麻", 130, 100, 255, 255, 255, 1, 28, 192, 192, 192
#endif
#ifdef SANMA4
	borderedtxt2 "四人三麻", 130, 100, 255, 255, 255, 1, 28, 192, 192, 192
#endif
#ifdef SANMA
	borderedtxt2 "三人打ち", 130, 100, 255, 255, 255, 1, 28, 192, 192, 192
#endif
	redraw 1
	objsize 200, 30
	objmode 2: font fontname, 24, 0
	pos 100, 410: button gosub "Offline Start", *modesel1
	pos 320, 410: button gosub "Server Start", *modesel2
	pos 540, 410: button gosub "Client Start", *modesel3
	pos 100, 460: button gosub "Watch Mode", *modesel5
	pos 320, 460: button gosub "Config", *selcat
	pos 540, 460: button goto "Quit", *modesel4
	tooltip 0, "コンピューターとの対戦を開始します"
	tooltip 1, "通信対戦用の卓を準備します"
	tooltip 2, "通信対戦用の卓に接続します"
	tooltip 3, "コンピューター同士の対戦を観賞します"
	tooltip 4, "ルールを設定します"
	tooltip 5, "終了します"
	debug "タイトル画面を準備しました。"
	return

/* モード選択画面 */
*selmode
	gosub *titlemenu
	debug "応答を待ちます。"
	repeat
		if (getGameMode(GameEnv) >= GAMEMODE_STANDALONE) {vanish: break}
		await 1
	loop: objmode 2: font fontname, 12, 0
	return

*modesel5
	dsplay SND_BUTTON
	setPlayerName GameEnv, 0, "[a]COM1"
	setPlayerName GameEnv, 1, "[b]COM2"
	setPlayerName GameEnv, 2, "[c]COM3"
	setPlayerName GameEnv, 3, "[d]COM4"
	setGameMode GameEnv, GAMEMODE_STANDALONE
	SetWatchModeFlag GameEnv, 1
	ServerAddress = ""
	return

*modesel1
	dsplay SND_BUTTON
	gosub *entername
	setPlayerName GameEnv, 0, "[A]"+InputPlayerName
	setPlayerName GameEnv, 1, "[b]COM1"
	setPlayerName GameEnv, 2, "[c]COM2"
	setPlayerName GameEnv, 3, "[d]COM3"
	setGameMode GameEnv, GAMEMODE_STANDALONE
	ServerAddress = ""
	return

*modesel2
	dsplay SND_BUTTON
	gosub *entername
	setPlayerName GameEnv, 0, "[A]"+InputPlayerName
	setPlayerName GameEnv, 1, "[b]COM"
	setPlayerName GameEnv, 2, "[c]COM"
	setPlayerName GameEnv, 3, "[d]COM"
	setGameMode, GameEnv, GAMEMODE_SERVER
	ServerAddress = ""
	sockmake SOCK_GAME+0, PORT_GAME
	vanish
	objsize 440, 40
	pos 200, 270: button gosub "この面子で開始する", *modesel2s
	startflag = 0
	repeat
		redraw 0
		showbackground
		CurrentConnection = 1
		repeat NUM_OF_PLAYERS-1
			if (IsRemotePlayer(GameEnv, cnt+1) > 0) {CurrentConnection++}
		loop
		sysscr fontname, "接続を待っています", "Waiting clients.", strf("\n現在の接続人数： %d / %d 人", CurrentConnection, NUM_OF_ACTUAL_PLAYERS)
		redraw 1
		sockwait SOCK_GAME+0 // クライアントの接続を待機
		if (stat == 0) {
			if (IsRemotePlayer(GameEnv, 1) == 0) {
				SetRemotePlayer GameEnv, 1, 2
				sockputc 2, SOCK_GAME+0
				sockclose SOCK_GAME+0
				sockmake SOCK_GAME+1, PORT_GAME+1
				repeat
					sockwait SOCK_GAME+1
					if (stat == 0) {
						tmpclientnum = 1
						gosub *receiveclientname
						setPlayerName GameEnv, 1, "[B]"+tmpClientName
						break
					}
					await 0
				loop
			} else {
				if (IsRemotePlayer(GameEnv, 2) == 0) {
					SetRemotePlayer GameEnv, 2, 3
					sockputc 3, SOCK_GAME+0
					sockclose SOCK_GAME+0
					sockmake SOCK_GAME+2, SOCK_GAME+2
					repeat
						sockwait SOCK_GAME+2
						if (stat == 0) {
							tmpclientnum = 2
							gosub *receiveclientname
							setPlayerName GameEnv, 2, "[C]"+tmpClientName
							break
						}
						await 0
					loop
#ifndef SANMAT
				} else {
					setRemotePlayer GameEnv, 3, 4
					sockputc 4, SOCK_GAME+0
					sockclose SOCK_GAME+0
					sockmake SOCK_GAME+3, PORT_GAME+3
					repeat
						sockwait SOCK_GAME+3
						if (stat == 0) {
							tmpclientnum = 3
							gosub *receiveclientname
							setPlayerName GameEnv, 3, "[D]"+tmpClientName
							break
						}
						await 0
					loop
#endif
				}
			}
			sockmake SOCK_GAME+0, PORT_GAME+0
		}
		await 0
		if (CurrentConnection == NUM_OF_ACTUAL_PLAYERS) {startflag = 1}
		if (startflag) {
			serversend 0xb4, GameEnv
			repeat NUM_OF_ACTUAL_PLAYERS
				tmpcnt = cnt
				serversend 0xb8, GameEnv
				serversend strlen(getPlayerName(GameEnv, tmpcnt)), GameEnv
				repeat strlen(getPlayerName(GameEnv, tmpcnt))
					serversend peek(getPlayerName(GameEnv, tmpcnt), cnt), GameEnv
				loop
			loop
			exportRule RuleConf
			repeat RULE_STRING_LINES
				tmpcnt = cnt
				serversend 0xb8, GameEnv
				serversend strlen(RuleConf(tmpcnt)), GameEnv
				repeat strlen(RuleConf(tmpcnt)): serversend peek(RuleConf(tmpcnt), cnt), GameEnv: loop
			loop
			break
		}
	loop
return

*receiveclientname
	sdim tmpClientName, 256
	repeat
		ReceivedMsg = 1023
		sockcheck tmpclientnum
		if (stat == 0) {
			sockgetc ReceivedMsg, tmpclientnum
			if (ReceivedMsg < 0) {ReceivedMsg += 256}
			if (ReceivedMsg == 0xb8) {
				break
			}
		}
		await 0
	loop
	repeat
		ReceivedMsg = 1023
		sockcheck tmpclientnum
		if (stat == 0) {
			sockgetc ReceivedMsg, tmpclientnum
			if (ReceivedMsg < 0) {ReceivedMsg += 256}
			tmpstrsize = ReceivedMsg
			break
		}
		await 0
	loop
	repeat tmpstrsize
		tmpstrpos = cnt
		repeat
			ReceivedMsg = 1023
			sockcheck tmpclientnum
			if (stat == 0) {
				sockgetc ReceivedMsg, tmpclientnum
				if (ReceivedMsg < 0) {ReceivedMsg += 256}
				poke tmpClientName, tmpstrpos, ReceivedMsg
				break
			}
			await 0
		loop
	loop
	return

*modesel2s
	dsplay SND_BUTTON
	startflag = 1
	return

*modesel3
	dsplay SND_BUTTON
	gosub *entername
	redraw 0
	showbackground
	sysscr fontname, "接続先を入力してね", "Choose server.", "サーバーのIPアドレス、または\nドメイン名を入力してください"
	redraw 1
	setGameMode, GameEnv, GAMEMODE_CLIENT: vanish
	ServerAddress = ""
	objsize 440, 40
	pos 200, 270: input ServerAddress
	pos 200, 320: button gosub "Connect", *modesel3c
	ServerSelected = 0
	repeat
		if (ServerSelected) {
			vanish
			redraw 0
			showbackground
			sysscr fontname, "接続先を入力してね", "Choose server.", "サーバーに接続しています\nしばらくお待ちください"
			redraw 1
			sockopen SOCK_GAME+0, ServerAddress, PORT_GAME+0
			if (stat == 0) {
				repeat
					sockcheck SOCK_GAME+0
					if (stat == 0) {
						repeat
							clientreceive ClientReceived, ReceivedMsg
							if (ClientReceived) {break}
							await 0
						loop
						sockclose SOCK_GAME+0
						tmp = ReceivedMsg
						repeat
							sockopen SOCK_GAME+0, ServerAddress, PORT_GAME-1+tmp
							if (stat == 0) {break}
							await 1000
						loop
						ClientNumber = tmp - 1
						repeat NUM_OF_ACTUAL_PLAYERS
							if (cnt != ClientNumber) {setRemotePlayer GameEnv, cnt, 1}
						loop
						break
					}
					await 0
				loop
				redraw 0
				showbackground
				sysscr fontname, "接続先を入力してね", "Choose server.", "開始合図を待っています\nしばらくお待ちください"
				redraw 1
				clientsend 0xb8
				clientsend strlen(InputPlayerName)
				repeat strlen(InputPlayerName)
					clientsend peek(InputPlayerName, cnt)
				loop
				repeat
					clientreceive ClientReceived, ReceivedMsg
					if ((ClientReceived)&&(ReceivedMsg == 0xb4)) {break}
					await 0
				loop
				repeat NUM_OF_ACTUAL_PLAYERS
					tmpclientnum = 0
					gosub *receiveclientname
					setPlayerName GameEnv, cnt, tmpClientName
				loop
				sdim RuleConf, RULE_IN_LINE+4, length(RuleTxt)
				repeat RULE_STRING_LINES
					gosub *receiveclientname: RuleConf(cnt) = tmpClientName
				loop
				storeRule RuleConf
				break
			} else {
				dialog "サーバーに接続できません\nオフラインモードで開始します", 1, "接続失敗"
				setGameMode GameEnv, GAMEMODE_STANDALONE
				setPlayerName GameEnv, 0, "[A]"+InputPlayerName
				setPlayerName GameEnv, 1, "[b]"
				setPlayerName GameEnv, 2, "[c]"
				setPlayerName GameEnv, 3, "[d]"
				break
			}
		}
		await 1
	loop
	return

*modesel3c
	dsplay SND_BUTTON
	ServerSelected = 1
	return

*modesel4
	dsplay SND_BUTTON
	goto *cleanup

/* 名前の入力 */
*entername
	redraw 0
	vanish
	showbackground
	sysscr fontname, "名前を入力してね", "Enter your name.", "プレーヤー名を入力してください\n（全角８文字まで）"
	redraw 1
	InputPlayerName = ""
	objsize 440, 40
	pos 200, 270: input InputPlayerName
	pos 200, 320: button gosub "Enter", *nameentered
	nameenteredflag = 0
	repeat
		if (strlen(InputPlayerName) > 16) {
			InputPlayerName = strmid(InputPlayerName, 0, 16)
			objprm 0+STATBOX, InputPlayerName
		}
		if (nameenteredflag) {
			if (InputPlayerName == "") {InputPlayerName = "(名無し)"}
			if (strlen(InputPlayerName) > 16) {
				InputPlayerName = strmid(InputPlayerName, 0, 16)
			}
			break
		}
		await 1
	loop
return

*nameentered
	dsplay SND_BUTTON
	nameenteredflag = 1
return

*chrshuffle
	if (getGameMode(GameEnv) == GAMEMODE_SERVER) {
		repeat NUM_OF_PLAYERS
			if (IsRemotePlayer(GameEnv, cnt) > 1) {
				sockmake SOCK_CHAT-1+IsRemotePlayer(GameEnv, cnt), PORT_CHAT-1+IsRemotePlayer(GameEnv, cnt)
			}
		loop
	}
	repeat NUM_OF_ACTUAL_PLAYERS
		TmpRemotePlayer(cnt) = IsRemotePlayer(GameEnv, cnt)
		TmpPlayerName(cnt) = getPlayerName(GameEnv, cnt)
		TmpPosition(cnt) = cnt
	loop
	if (getGameMode(GameEnv) != GAMEMODE_CLIENT) {
		repeat 600
			tmp1 = rnd(NUM_OF_ACTUAL_PLAYERS): tmp2 = rnd(NUM_OF_ACTUAL_PLAYERS)
			tmp3 = TmpPosition(tmp1)
			TmpPosition(tmp1) = TmpPosition(tmp2)
			TmpPosition(tmp2) = tmp3
		loop
		if (getGameMode(GameEnv) == GAMEMODE_SERVER) {
			repeat NUM_OF_ACTUAL_PLAYERS
				serversend TmpPosition(cnt), GameEnv
			loop
		}
	} else {
		repeat NUM_OF_ACTUAL_PLAYERS
			tmp = cnt
			repeat
				clientreceive ClientReceived, ReceivedMsg
				if (ClientReceived) {
					TmpPosition(tmp) = ReceivedMsg
					break
				}
				await 0
			loop
		loop
	}
	//await 500
	titleJia = "東", "南", "西", "北"
//	font fontname, 192, 0
//	BorderTextX = 20: BorderTextY = 150: dsplay SND_TYPE
//	BorderText = titleJia(TmpPosition(0)): borderedtxt BorderText, BorderTextX, BorderTextY, 255, 255, 255: await 500
//	BorderTextX = 440: BorderTextY = 150: dsplay SND_TYPE
//	BorderText = titleJia(TmpPosition(1)): borderedtxt BorderText, BorderTextX, BorderTextY, 255, 255, 255: await 500
//	BorderTextX = 200: BorderTextY = 430: dsplay SND_TYPE
//	BorderText = titleJia(TmpPosition(2)): borderedtxt BorderText, BorderTextX, BorderTextY, 255, 255, 255: await 500
//#ifndef SANMAT
//	BorderTextX = 620: BorderTextY = 430: dsplay SND_TYPE
//	BorderText = titleJia(TmpPosition(3)): borderedtxt BorderText, BorderTextX, BorderTextY, 255, 255, 255: await 500
//#endif
	repeat NUM_OF_ACTUAL_PLAYERS
		setRemotePlayer GameEnv, TmpPosition(cnt), TmpRemotePlayer(cnt)
		setPlayerName GameEnv, TmpPosition(cnt), TmpPlayerName(cnt)
	loop
	tmpPlayer = TmpPosition(ClientNumber)
	if (getGameMode(GameEnv) == GAMEMODE_CLIENT) {
		repeat NUM_OF_ACTUAL_PLAYERS
			if (cnt == tmpPlayer) {setRemotePlayer GameEnv, cnt, 0}
			else {setRemotePlayer GameEnv, cnt, 1}
		loop
	}
	//await 3000
	return

#module
#deffunc sysscr str fontname, str txt1, str txt2, str txt3
	borderedtxt2 txt1, 152, 12, 255, 255, 255, 1, 48, 192, 192, 192
	borderedtxt2 txt2, 600, 24, 255, 255, 255, 1, 24, 192, 192, 192
	txtbuf = txt3: notesel txtbuf
	repeat notemax
		noteget tmptxt, cnt
		borderedtxt2 tmptxt, 196, 192+32*cnt, 255, 255, 255, 1, 32, 192, 192, 192
	loop
	noteunsel
	return
#global
