==============================================================================
【MiHaJong】          Japanese Mahjong with a lot of local rules implemented
AI用スクリプト説明 Copyright (c) 2008-2012 MihailJP, Part of rights reserved
==============================================================================

■ はじめに

	　MiHaJongでは、バージョン1.7より、AIの思考ルーチンをLuaスクリプトで書くこ
	とができます。この文書では、MiHaJong用に追加された要素を説明しています。
	Lua言語の基本的なことは、別途Lua言語のリファレンスマニュアルなどをご覧くだ
	さい。


■ 使用可能な標準ライブラリ

	　MiHaJongでは、基本ライブラリ(コルーチンライブラリを含む)のみがオープンさ
	れています。


■ MiHaJong用スクリプトで定義しなければならない関数

	　MiHaJongで使用するLuaスクリプトでは、次の関数をグローバル環境に定義しな
	ければなりません。定義されていない場合、そのスクリプトを無効とみなしツモ切
	りを行います。

	▼ determine_discard (gametbl) (新仕様未対応)

		　ツモ番になるごとに、(山から1枚自摸った状態で)この関数が呼ばれます。
		この関数は引数を1つ取り、2つの値を返します。
		　引数 gametbl は、卓の情報を示すテーブルで、軽量ユーザーデータとメ
		ソッドが格納されています。
		　1番目の返り値は、捨て牌の付帯情報(暗槓する、リーチする……)を表す番
		号です。これについては、後述する mihajong.DiscardType を参照してくださ
		い。
		　2番目の返り値は、手牌の番号を表すインデックスで、1から14で指定します。
		14を指定すると、ツモ切りしたことになります(副露してもこれは変わりませ
		ん)。存在しない牌のインデックスを指定した場合、多牌でアガリ放棄となり
		ます。
		　なお、1番目の返り値に mihajong.DiscardType.Agari か mihajong.
		DiscardType.Kyuushu を指定した場合捨牌が不要ですので、この場合は2番目
		の返り値を nil にしてもかまいません。


	▼ determine_call (gametbl) (未実装)

		　あとで書く


■ determine_discard、determine_call の引数について

	　あとでテーブルの説明を書く

	▼ gametbl.addr

		　卓情報のアドレスを示す軽量ユーザーデータです。


	▼ gametbl.playerid (未実装)

		　自分自身を表すプレイヤー番号です。


	▼ gametbl:evaluate(引数仕様未定) (未実装)

		　符、飜、点数、縛りを満たすか否かを求める　詳細未定


	▼ gametbl:getactiveplayer()

		　現在のツモ番のプレイヤー番号を1〜4(三人打ちの場合は1〜3)の数値で返し
		ます。


	▼ gametbl:getchip([player])

		　playeridで指定したプレイヤー(省略した、またはnilを指定した場合は自分
		自身)のチップの収支を返します。但し、チップ無しのルールの場合はnilを返
		します。


	▼ gametbl:getdeckleft()

		　山牌の残り枚数を返します(王牌は数えません)。


	▼ gametbl:getdeposit()

		　現在の供託点棒の数を返します。


	▼ gametbl:getdiscard([playerid])

		　playeridで指定したプレイヤー(省略した、またはnilを指定した場合は自分
		自身)捨牌をテーブルで返します。このテーブルはそれぞれの捨牌の情報がサ
		ブテーブルとして順番に格納されており、これには次のフィールドがあります。

		● tile フィールド

			　牌の種類を表す番号が入ります。

		● red フィールド

			　赤ドラかどうかを示す番号が入ります。

		● through フィールド

			　ツモ切りした牌であればtrueが、そうでなければfalseが入ります。

		● riichi フィールド

			　リーチ宣言牌であればtrueが、そうでなければfalseが入ります。

		● taken フィールド

			　鳴かれた牌であればtrueが、そうでなければfalseが入ります。


	▼ gametbl:getdorainfo()

		　牌の種類ごとにドラになっているかどうか(なっている場合は何重にドラに
		なっているかも)を格納したテーブルを返します。このテーブルのキーは
		mihajong.Tile に定義された数値で、キーに関連付けられる値は、例えばドラ
		ではないときは0、ダブルドラになっているときは2……という数値になります。
		　なお、槓ドラ(裏ドラはもちろん含まれません)のほか、永田町ルールにおけ
		るサイコロによるドラも含まれます。

		　注意！　この関数で返されるテーブルはキーが飛び飛びの数値になっていま
		す。

		　注意！　Luaの言語仕様では、0はtrueに評価されます。ある牌がドラではな
		いことを判定したいならば、
		(gametbl:getdorainfo())[mihajong.Tile.Wind.East] == 0
		のようにします。


	▼ gametbl:getdoukasen()

		　導火線(自摸牌の位置)にあたるプレイヤーの番号を1〜4(三人打ちの場合は1
		〜3)の数値で返します。導火線なしの時はnilを返します。


	▼ gametbl:getflower(引数仕様未定) (未実装)

		　花牌、または三麻の抜きドラの情報を取得(他家の情報も取得可能)　詳細未
		定

	▼ gametbl:gethand([playerid])

		　自分の(playeridを指定した場合は指定したプレイヤー、但し他家を指定す
		る場合はオープン立直している場合に限る)手牌をテーブルで返します。この
		テーブルは1〜14のインデックスを持ちますが、自摸牌のインデックスは常に
		14となります。このため、門前でないときはsparse な配列になることがあり
		ます。存在する牌の位置には牌の情報を格納したサブテーブルが入り、牌が存
		在しない位置はnilとなります。
		　親の配牌時は自摸牌に関係なく理牌された状態で1〜14に牌のデータが格納
		されています。また、鳴いた直後の捨牌についてはインデックス14がnilと
		なっています。

		● tile フィールド

			　牌の種類を表す番号が入ります。

		● red フィールド

			　赤ドラかどうかを示す番号が入ります。


	▼ gametbl:getmeld([playerid]) (未実装)

		　playeridで指定したプレイヤー(省略した、またはnilを指定した場合は自分
		自身)の鳴き面子を格納したテーブルで返します。このテーブルは鳴いた回数
		に応じて1〜4のインデックスを持ちます。門前かつ暗槓も行なっていない場合
		は空のテーブルが返ります。個別の鳴き面子の情報はサブテーブルで表され、
		次のフィールドが含まれます。

		● tile フィールド

			　牌の種類を表す番号が入ります。ただし明順子(チー)の場合、一番数字
			の低い牌が入ります。

		● red フィールド(詳細未定)

			　赤ドラかどうかを示す番号が入ります。

		● type フィールド

			　面子の種類(順子、刻子……)を示す番号が入ります。


	▼ gametbl:getopenwait()

		　牌の種類ごとにオープンリーチの待ち牌になっているかどうかを格納した
		テーブルを返します。このテーブルのキーは mihajong.Tile に定義された数
		値で、キーに関連付けられる値は、その牌がオープンリーチの待ち牌になって
		いればtrue、そうでなければfalseになります。

		　注意！　この関数で返されるテーブルはキーが飛び飛びの数値になっていま
		す。


	▼ gametbl:getownwind(引数仕様未定) (未実装)

		　自風を求める　詳細未定

	▼ gametbl:getprevailingwind(引数仕様未定) (未実装)

		　場風を求める　詳細未定

	▼ gametbl:getpreviousdiscard() (未実装)

		　この関数は返り値が2つあります。鳴いた直後の捨牌である場合、直前に鳴
		いた牌の種類を表す番号を返します。この関数は、食い変えにならないように
		するための判定に使用できます。
		　1番目の返り値は鳴いた牌の現物を表す番号で、2番めは(チーの直後である
		場合のみ)筋食い変えになるような牌の番号です。
		　該当する牌がなければ、nilが返ります。


	▼ gametbl:getrank([player])

		　playeridで指定したプレイヤー(省略した、またはnilを指定した場合は自分
		自身)の順位を返します。


	▼ gametbl:getround()

		　現在の局番号を返します。これは、東1局を1とし、東2局を2、以下同様にし
		て北4局が16となり、返り東1局が17(白入ありのルールでは白1局が17、以下同
		様にして中4局が28、返り東1局が29)とした通し番号です。なお、三人打ちで
		は4、8、12(以下同様)が欠番となります(四麻・三麻問わず南1局は5になると
		いうこと)。東場のみを行うルールの場合、東5局は5、東6局は6……のように、
		「東n局」のnの部分がそのまま返されます。


	▼ gametbl:getrule(ruletag)

		　ルールを取得する　あとで書く


	▼ gametbl:getscore([player])

		　playeridで指定したプレイヤー(省略した、またはnilを指定した場合は自分
		自身)の持ち点を返します。
		　滅多に発生しないことですが、箱下ありの青天井ルールであまりに絶対値の
		大きい点数の場合、正確な値が取得できない場合があります。


	▼ gametbl:getseentiles(引数仕様未定) (未実装)

		　見えている牌を数える　詳細未定

	▼ gametbl:getshanten(引数仕様未定) (未実装)

		　シャンテン数を求める　詳細未定

	▼ gametbl:gettileinfo(引数仕様未定) (未実装)

		　手牌の中のある牌についての情報　詳細未定

	▼ gametbl:gettilerisk(引数仕様未定) (未実装)

		　手牌の中のある牌について、安牌かどうか判断するための情報　詳細未定

	▼ gametbl:gettsumibou()

		　現在の積み棒の数を返します。


	▼ gametbl:getwareme()

		　割れ目(開門の位置)にあたるプレイヤーの番号を1〜4(三人打ちの場合は1〜
		3)の数値で返します。割れ目なしの時はnilを返します。


	▼ gametbl:getyakuhaiwind(引数仕様未定) (未実装)

		　風牌が役牌になっているか調べる　詳細未定


	▼ gametbl:isfinalround()

		　オーラスまたは延長戦(半荘戦であれば西入以降)であればtrueを、そうでな
		ければfalseを返します。


	▼ gametbl:isfirstdraw()

		　鳴きのない第1ツモ(親については配牌直後)であればtrueを、そうでなけれ
		ばfalseを返します。


	▼ gametbl:isippatsu([player])

		　playerには調べたいプレイヤーの番号を指定します。nilが渡された場合ま
		たは省略された場合は、自身の状態を調べます。
		　立直一発が成立しうる状態ならtrueを、そうでなければfalseを返します。
		但し、一発なしのルールの時はnilを返します。


	▼ gametbl:iskyuushu()

		　九種九牌の条件を満たしていればtrueを、そうでなければfalseを返します。
		但し、九種九牌で流せないルールの時はnilを返します。


	▼ gametbl:ismenzen([player])

		　playerには調べたいプレイヤーの番号を指定します。nilが渡された場合ま
		たは省略された場合は、自身の状態を調べます。
		　門前であればtrueを、そうでなければfalseを返します。


	▼ gametbl:isopenriichideclared([player])

		　playerには調べたいプレイヤーの番号を指定します。nilが渡された場合ま
		たは省略された場合は、自身の状態を調べます。
		　オープン立直しているならtrueを、そうでなければfalseを返します。


	▼ gametbl:ispenultimateround()

		　ラス前(半荘戦であれば南3局、東風戦であれば東3局)であればtrueを、そう
		でなければfalseを返します。


	▼ gametbl:isriichideclared([player])

		　playerには調べたいプレイヤーの番号を指定します。nilが渡された場合ま
		たは省略された場合は、自身の状態を調べます。
		　立直しているならtrueを、そうでなければfalseを返します。


	▼ gametbl:isshisanbuda()

		　十三不塔になっていればtrueを、そうでなければfalseを返します。但し、
		十三不塔なしのルールの時はnilを返します。


	▼ gametbl:isshisibuda()

		　十三無靠(十四不塔)になっていればtrueを、そうでなければfalseを返しま
		す。但し、十三無靠(十四不塔)なしのルールの時はnilを返します。


	▼ gametbl:issumaroallowed()

		　四馬路和了のための事前条件(満貫以上の和了)を満たしている場合trueを、
		そうでなければfalseを返します。但し、四馬路自体がないルールの時はnilを
		返します。


	▼ gametbl:isyakitori([player])

		　playerには調べたいプレイヤーの番号を指定します。nilが渡された場合ま
		たは省略された場合は、自身の状態を調べます。
		　指定したプレイヤーが焼き鳥ならtrueを、そうでなければfalseを返します。
		但し、焼き鳥なしのルールの時はnilを返します。


	▼ gametbl:isyakitori()

		　playerには調べたいプレイヤーの番号を指定します。nilが渡された場合ま
		たは省略された場合は、自身の状態を調べます。
		　指定したプレイヤーが焼き鳥ならtrueを、そうでなければfalseを返します。
		但し、焼き鳥なしのルールの時はnilを返します。


■ mihajongテーブル

	　MiHaJongで使用する(現在のシャンテン数を求める、などといった)関数、あるい
	は(暗槓する、リーチするといった捨牌の付帯情報の番号といった)エイリアスが、
	mihajongテーブルに格納されています。

	▼ mihajong.DiscardType

		　暗槓する、リーチするといった捨牌の付帯情報を表す数値を格納したテーブ
		ルです。これらは、determine_discard 関数の戻り値として、「return
		mihajong.DiscardType.Riichi, 7」のように使用します。このテーブルには、
		以下のフィールドが格納されています。

		・Normal …… 特に何もせず、普通の捨牌を行います。
		・Ankan …… 捨牌ではなく、暗槓を行います。
		・Kakan …… 捨牌ではなく、加槓を行います。
		・Riichi …… この捨牌で立直を宣言します。
		・Flower …… 捨牌の代わりに、花牌、三麻の北を晒します。
		・OpenRiichi …… この捨牌でオープン立直を宣言します。※1
		・Agari …… ツモアガリを宣言します。※2
		・Kyuushu …… 九種九牌を宣言します。

		※1 オープンリーチなしの時に mihajong.DiscardType.OpenRiichi を指定し
		　　た場合、mihajong.DiscardType.Riichi を指定したものとみなされます。
		※2 和了れない状況で mihajong.DiscardType.Agari を指定した場合、チョン
		　　ボになります。


	▼ mihajong.Call

		　チー、ポンといった鳴きの種類を表す数値を格納したテーブルです。これら
		は、determine_call 関数の戻り値として、「return mihajong.Call.Ron」の
		ように使用します。このテーブルには、以下のフィールドが格納されています。

		・None …… 捨牌を見逃します。
		・Ron …… 捨牌でロンします。※1
		・Kan …… 捨牌を明槓します。
		・Pon …… 捨牌をポンします。
		・Chii.Lower …… 捨牌を両面の小さい側、または辺張の7としてチーします。
		・Chii.Middle …… 捨牌を嵌張としてチーします。
		・Chii.Upper …… 捨牌を両面の大きい側、または辺張の3としてチーします。

		※1 和了れない状況で mihajong.Call.Ron を指定した場合、チョンボになり
		　　ます。


	▼ mihajong.MeldType (未実装)

		　明刻、暗槓といった鳴き面子の種類を表す数値を格納したテーブルです。こ
		のテーブルには、以下のフィールドが格納されています。

		・to be written...


	▼ mihajong.Tile

		　一索、五筒といった牌の種類を表す数値を格納したテーブルです。このテー
		ブルには、以下のフィールドが格納されています。

		・Character …… 萬子を表すサブテーブルです。
		　　　　　　　　 この中には、OneからNineまでの定数があります。数字の1
		　　　　　　　　 から9も使用できます。
		・Circle …… 筒子を表すサブテーブルです。
		　　　　　　　この中には、OneからNineまでの定数があります。数字の1から
		　　　　　　　9も使用できます。
		・Bamboo …… 索子を表すサブテーブルです。
		　　　　　　　この中には、OneからNineまでの定数があります。数字の1から
		　　　　　　　9も使用できます。
		・Wind …… 風牌を表すサブテーブルです。
		　　　　　　この中には、East、South、West、Northという定数があります。
		・Dragon …… 三元牌を表すサブテーブルです。
		　　　　　　　この中には、White、Green、Redという定数があります。
		・Flower …… 花牌を表すサブテーブルです。
		　　　　　　　この中には、季節牌を表すSpring、Summer、Autumn、Fall、
		　　　　　　　Winter、および草木牌を表すPlum、Orchid、Chrysanthemum、
		　　　　　　　Chrys、Bambooという定数があります。なお、FallはAutumnと
		　　　　　　　同義で、ChrysはChrysanthemumと同義です。


	▼ mihajong.gametbl (未実装)

		　determine_discard、determine_call の引数として渡されるテーブルのプロ
		トタイプです。詳細は前述しています。


■ 見出しレベル１

	▼ 見出しレベル２

		　ここに本文を書きます。


	▼ 見出しレベル２

		　ここに本文を書きます。

		● 見出しレベル３

			　ここに本文を書きます。

		● 見出しレベル３

			　ここに本文を書きます。


■ 見出しレベル１

	　ここに本文を書きます。

	▼ 見出しレベル２

		　ここに本文を書きます。


==============================================================================
                                                                       Finis
==============================================================================
