==============================================================================
【MiHaJong】          Japanese Mahjong with a lot of local rules implemented
AI用スクリプト説明 Copyright (c) 2008-2012 MihailJP, Part of rights reserved
==============================================================================

■ はじめに

	　MiHaJongでは、バージョン1.7より、AIの思考ルーチンをLuaスクリプトで書くこ
	とができます。この文書では、MiHaJong用に追加された要素を説明しています。
	Lua言語の基本的なことは、別途Lua言語のリファレンスマニュアルなどをご覧くだ
	さい。


■ 使用可能な標準ライブラリ

	　MiHaJongでは、基本ライブラリ(コルーチンライブラリを含む)のみがオープンさ
	れています。


■ MiHaJong用スクリプトで定義しなければならない関数

	　MiHaJongで使用するLuaスクリプトでは、次の関数をグローバル環境に定義しな
	ければなりません。定義されていない場合、そのスクリプトを無効とみなしツモ切
	りを行います。

	▼ determine_discard (gametbl)

		　この関数は引数を1つ取り、2つの値を返します。引数 gametbl は、卓の情
		報を格納したテーブルです。
		　1番目の返り値は、捨て牌の付帯情報(暗槓する、リーチする……)を表す番
		号です。これについては、後述する mihajong.DiscardType を参照してくださ
		い。
		　2番目の返り値は、手牌の番号を表すインデックスで、1から14で指定します。
		14を指定すると、ツモ切りしたことになります(副露してもこれは変わりませ
		ん)。また、-1から-14で指定することもでき、この場合は-1が14(ツモ切り)、
		-2が13、(中略)-14が1とみなされます(配列のインデックスを指定するときと
		同じです)。存在しない牌のインデックスを指定した場合、多牌でアガリ放棄
		となります。
		　なお、1番目の返り値に mihajong.DiscardType.Agari か mihajong.
		DiscardType.Kyuushu を指定した場合捨牌が不要ですので、この場合は2番目
		の返り値を nil にしてもかまいません。


	▼ determine_call (gametbl) (未実装)

		　あとで書く


■ determine_discard、determine_call の引数について

	　あとでテーブルの説明を書く


■ mihajongテーブル

	　MiHaJongで使用する(現在のシャンテン数を求める、などといった)関数、あるい
	は(暗槓する、リーチするといった捨牌の付帯情報の番号といった)エイリアスが、
	mihajongテーブルに格納されています。

	▼ mihajong.DiscardType

		　暗槓する、リーチするといった捨牌の付帯情報を表す数値を格納したテーブ
		ルです。これらは、determine_discard 関数の戻り値として、「return
		mihajong.DiscardType.Riichi, 7」のように使用します。このテーブルには、
		以下のフィールドが格納されています。

		・Normal …… 特に何もせず、普通の捨牌を行います。
		・Ankan …… 捨牌ではなく、暗槓を行います。
		・Kakan …… 捨牌ではなく、加槓を行います。
		・Riichi …… この捨牌で立直を宣言します。
		・Flower …… 捨牌の代わりに、花牌、三麻の北を晒します。
		・OpenRiichi …… この捨牌でオープン立直を宣言します。※1
		・Agari …… ツモアガリを宣言します。※2
		・Kyuushu …… 九種九牌を宣言します。

		※1 オープンリーチなしの時に mihajong.DiscardType.OpenRiichi を指定し
		　　た場合、mihajong.DiscardType.Riichi を指定したものとみなされます。
		※2 和了れない状況で mihajong.DiscardType.Agari を指定した場合、チョン
		　　ボになります。

	▼ mihajong.Call (未実装)

		　チー、ポンといった鳴きの種類を表す数値を格納したテーブルです。これら
		は、determine_call 関数の戻り値として、「return mihajong.Call.Ron」の
		ように使用します。このテーブルには、以下のフィールドが格納されています。

		・None …… 捨牌を見逃します。
		・Ron …… 捨牌でロンします。※1
		・Kan …… 捨牌を明槓します。
		・Pon …… 捨牌をポンします。
		・Chii.Lower …… 捨牌を両面の小さい側、または辺張の7としてチーします。
		・Chii.Middle …… 捨牌を嵌張としてチーします。
		・Chii.Upper …… 捨牌を両面の大きい側、または辺張の3としてチーします。

		※1 和了れない状況で mihajong.Call.Ron を指定した場合、チョンボになり
		　　ます。


	▼ mihajong.Tile (未実装)

		　一索、五筒といった牌の種類を表す数値を格納したテーブルです。このテー
		ブルには、以下のフィールドが格納されています。

		・Character …… 萬子を表すサブテーブルです。
		　　　　　　　　 この中には、OneからNineまでの定数があります。数字の1
		　　　　　　　　 から9も使用できます。
		・Circle …… 筒子を表すサブテーブルです。
		　　　　　　　この中には、OneからNineまでの定数があります。数字の1から
		　　　　　　　9も使用できます。
		・Bamboo …… 索子を表すサブテーブルです。
		　　　　　　　この中には、OneからNineまでの定数があります。数字の1から
		　　　　　　　9も使用できます。
		・Wind …… 風牌を表すサブテーブルです。
		　　　　　　この中には、East、South、West、Northという定数があります。
		・Dragon …… 三元牌を表すサブテーブルです。
		　　　　　　　この中には、White、Green、Redという定数があります。
		・Flower …… 花牌を表すサブテーブルです。
		　　　　　　　この中には、季節牌を表すSpring、Summer、Autumn、Fall、
		　　　　　　　Winter、および草木牌を表すPlum、Orchid、Chrysanthemum、
		　　　　　　　Chrys、Bambooという定数があります。なお、FallはAutumnと
		　　　　　　　同義で、ChrysはChrysanthemumと同義です。


	▼ mihajong.evaluate(引数仕様未定) (未実装)

		　符、飜、点数、縛りを満たすか否かを求める　詳細未定

	▼ mihajong.shanten(引数仕様未定) (未実装)

		　シャンテン数を求める　詳細未定

	▼ mihajong.getdoukasenplayer(引数仕様未定) (未実装)

		　導火線にあたるプレイヤーを調べる　詳細未定

	▼ mihajong.getyakuhaiwind(引数仕様未定) (未実装)

		　風牌が役牌になっているか調べる　詳細未定


■ 見出しレベル１

	▼ 見出しレベル２

		　ここに本文を書きます。


	▼ 見出しレベル２

		　ここに本文を書きます。

		● 見出しレベル３

			　ここに本文を書きます。

		● 見出しレベル３

			　ここに本文を書きます。


■ 見出しレベル１

	　ここに本文を書きます。

	▼ 見出しレベル２

		　ここに本文を書きます。


==============================================================================
                                                                       Finis
==============================================================================
