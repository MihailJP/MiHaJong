/*=============================
 * HSP麻雀クライアントMiHaJong
 * [ネットワーク処理ルーチン]
 *=============================
 */

/* 接続先の打牌 */
#module
#uselib "mjcore.dll"
#func remotedahai_begin "?remotedahai_begin@RemoteAction@@YAXQAUGameTable@@@Z" int
#cfunc remotedahai_isfinished "?remotedahai_isfinished@RemoteAction@@YAHXZ"
#cfunc remotedahai_getdiscard "?remotedahai_getdiscard@RemoteAction@@YAHXZ"
#func remotedahai_end "?remotedahai_end@RemoteAction@@YAXXZ"
#deffunc remotedahai var GameStat, var GameEnv
	remotedahai_begin GameStat
	repeat
		if (remotedahai_isfinished()) {break}
		await 0
	loop
	DiscardTileIndex = remotedahai_getdiscard()
	remotedahai_end
	return DiscardTileIndex
#global

/* 接続先の鳴き */
#module
#uselib "mjcore.dll"
#func remotenaki_begin"?remotenaki_begin@RemoteAction@@YAXQAUGameTable@@@Z" int
#cfunc remotenaki_isfinished "?remotenaki_isfinished@RemoteAction@@YAHXZ"
#func remotenaki_end "?remotenaki_end@RemoteAction@@YAXXZ"
#deffunc remotenaki var GameStat, var GameEnv
	remotenaki_begin GameStat
	repeat
		if (remotenaki_isfinished()) {break}
		await 0
	loop
	remotenaki_end
	return
#global

/* 落ち戻り用の処理 */
*reconnection
	if (ReconnectionSuccess == 0) {
		dialog "サーバーとの接続が切れました\n再接続を試みます", 1, "回線切断"
	}
	sockclose 0+SOCK_GAME: await 1000
	ReconnectionSuccess = 0
	repeat 10
		sockopen 0+SOCK_GAME, ServerAddress, PORT_GAME+ClientNumber
		if (stat == 0) {ReconnectionSuccess = 1: break}
		await 1000
	loop
	if (ReconnectionSuccess == 0) {
		errordlg "再接続に失敗しました\nゲームは続行できません", "回線切断"
		if (getGameMode(GameEnv) != GAMEMODE_STANDALONE) {sockclose SOCK_GAME+0}
		if (getGameMode(GameEnv) == GAMEMODE_SERVER) {sockclose SOCK_GAME+1: sockclose SOCK_GAME+2: sockclose SOCK_GAME+3}
		font fontname, 48, 0: objsize 200, 60
		pos 620, 560: colorbutton goto "確認", *startgame, -1, 0xffffff
		stop
	}
return

/* チャットバッファ受信 */
#module
#uselib "mjcore.dll"
#func initchat "?initchat@chat@@YAXQBDH@Z" var, int
#func sendchat "?sendchat@chat@@YAXQBD@Z" str
#deffunc initializechat var GameEnv, var ServerAddress, int ClientNumber
	chatinit: rulewndinit
	if (getGameMode(GameEnv) == GAMEMODE_STANDALONE) {gsel SCR_CHAT: objgray 1, 0: objgray 2, 0: gsel 0}
	initchat ServerAddress, ClientNumber
	return

#deffunc chatpost var GameStat, var GameEnv
	CurrentChatTxt = CurrentChatTxt()
	sendchat CurrentChatTxt
	clearChatTxt
return
#global

/* チャット送信 */
*chatpost_
	chatpost GameStat, GameEnv
return
